{"version":3,"sources":["app/models/pagination.ts","app/api/agent.ts","app/models/activity.ts","app/models/profile.ts","app/stores/activityStore.ts","app/stores/profileStore.ts","app/stores/userStore.ts","app/stores/store.ts","app/stores/commonStore.ts","app/stores/modalStore.ts","app/stores/commentStore.ts","app/layout/NavBar.tsx","features/activities/dashboard/ActivityFilters.tsx","features/profiles/FollowButton.tsx","features/profiles/ProfileCard.tsx","features/activities/dashboard/ActivityListItemAttendee.tsx","features/activities/dashboard/ActivityListItem.tsx","features/activities/dashboard/ActivityList.tsx","features/activities/dashboard/ActivityListItemPlaceholder.tsx","features/activities/dashboard/ActivityDashboard.tsx","app/common/form/MyTextInput.tsx","features/users/LoginForm.tsx","features/errors/ValidationErrors.tsx","features/users/RegisterForm.tsx","features/home/HomePage.tsx","app/layout/LoadingComponent.tsx","app/common/form/MyTextArea.tsx","app/common/form/MySelectInput.tsx","app/common/form/MyDateInput.tsx","app/common/options/categoryOptions.tsx","features/activities/form/ActivityForm.tsx","features/activities/details/ActivityDetailedChat.tsx","features/activities/details/ActivityDetailedHeader.tsx","features/activities/details/ActivityDetailedInfo.tsx","features/activities/details/ActivityDetailedSidebar.tsx","features/activities/details/ActivityDetails.tsx","features/errors/TestError.tsx","features/errors/NotFound.tsx","features/errors/ServerError.tsx","app/common/modals/ModalContainer.tsx","features/profiles/ProfileEditForm.tsx","features/profiles/ProfileAbout.tsx","features/profiles/ProfileActivities.tsx","features/profiles/ProfileFollowings.tsx","app/common/imageUpload/PhotoWidgetCropper.tsx","app/common/imageUpload/PhotoWidgetDropzone.tsx","app/common/imageUpload/PhotoUploadWidget.tsx","features/profiles/ProfilePhotos.tsx","features/profiles/ProfileContent.tsx","features/profiles/ProfileHeader.tsx","features/profiles/ProfilePage.tsx","app/layout/PrivateRoute.tsx","app/layout/App.tsx","reportWebVitals.ts","app/layout/ScrollToTop.tsx","index.tsx"],"names":["PaginatedResult","data","pagination","this","PagingParams","pageNumber","pageSize","axios","defaults","baseURL","process","interceptors","request","use","config","token","store","commonStore","headers","Authorization","response","a","JSON","parse","error","status","console","log","toast","method","errors","hasOwnProperty","history","push","modalStateErrors","key","flat","startsWith","userStore","logout","setServerError","Promise","reject","responseBody","requests","url","get","then","body","post","put","delete","agent","Activities","list","params","details","id","create","activity","update","attend","Account","current","login","user","register","fbLogin","accessToken","refreshToken","Profiles","username","uploadPhoto","file","formData","FormData","append","setMainPhoto","deletePhoto","updateProfile","profile","updateFollowing","listFollowings","predicate","listActivities","Activity","init","Object","assign","ActivityFormValues","undefined","title","category","description","date","city","venue","Profile","displayName","image","ActivityStore","activityRegistry","Map","selectedActivity","editMode","loading","loadingInitial","pagingParams","set","setPagingParams","pagingPrams","setPredicate","value","resetPredicate","forEach","loadActivities","axiosParams","result","setActivity","setPagination","setLoadingInitial","loadActivity","getActivity","isGoing","attendees","some","isHost","hostUsername","host","find","x","Date","state","createActivity","attendee","newActivity","runInAction","updateActivity","deleteActivity","updateAttendance","filter","cancelActivityToggle","isCancelled","clearSelectedActivity","updateAttendeeFollowing","following","followersCount","makeAutoObservable","reaction","keys","clear","URLSearchParams","toString","toISOString","Array","from","values","sort","b","getTime","entries","activitiesByDate","reduce","activities","format","ProfileStore","loadingProfile","uploading","followings","loadingFollowings","activeTab","userActivities","loadingActivities","setActiveTab","loadProfile","photo","photos","isMain","setImage","p","setDisplayName","activityStore","followingCount","loadFollowings","loadUserActivities","UserStore","fbAccessToken","fbLoading","refreshTokenTimeout","creds","setToken","startRefreshTokenTimer","modalStore","closeModal","window","localStorage","removeItem","getUser","name","getFacebookLoginStatus","FB","getLoginStatus","authResponse","facebookLogin","apiLogin","catch","scope","stopRefreshTokenTimer","jwtToken","atob","split","timeout","exp","now","setTimeout","clearTimeout","getItem","appLoaded","setAppLoaded","setItem","modal","open","openModal","content","profileStore","commentStore","comments","hubConnection","createHubConnection","activityId","HubConnectionBuilder","withUrl","accessTokenFactory","withAutomaticReconnect","configureLogging","LogLevel","Information","build","start","on","comment","createAt","unshift","stopHubConnection","stop","clearComments","addComment","invoke","StoreContext","createContext","useStore","useContext","observer","Menu","inverted","fixed","Container","Item","as","NavLink","to","exact","header","src","alt","style","marginRight","Button","positive","position","Image","avatar","spaced","Dropdown","pointing","text","Link","icon","onClick","vertical","size","width","marginTop","Header","attached","color","active","has","onChange","Reveal","animated","Content","visible","fluid","hidden","basic","e","preventDefault","handleFollow","Card","Description","str","length","substring","truncate","bio","extra","Icon","styles","borderColor","borderWidth","List","horizontal","map","Popup","hoverable","trigger","circular","bordered","ActivityListItem","Segment","Group","Label","textAlign","marginBottom","secondary","clearing","floated","groupActivities","group","sub","ActivityListItemPlaceholder","Placeholder","minHeight","Line","Paragraph","disabled","useState","loadingNext","setLoadingNext","useEffect","Grid","Column","pageStart","loadMore","currentPage","hasMore","totalPages","initialLoad","Loader","MyTextInput","props","useField","field","meta","Form","Field","touched","label","initialValues","email","password","onSubmit","setErrors","handleSubmit","isSubmitting","className","autoComplete","placeholder","type","render","ValidationErrors","Message","err","i","validationSchema","Yup","required","isValid","dirty","sytle","isLoggedIn","Divider","LoadingComponent","Dimmer","MyTextArea","MySelectInput","helpers","Select","clearable","options","d","setValue","onBlur","setTouched","MyDateInput","selected","categoryOptions","ActivityForm","useHistory","useParams","validationCchema","nullable","enableReinitialize","uuid","handleFormSubmit","rows","placeholderText","showTimeSelect","timeCaption","dateFormat","border","resetForm","onKeyPress","shiftKey","Comment","Avatar","Author","Metadata","formatDistanceToNow","Text","whiteSpace","activityImageStyle","activityImageTextStyle","bottom","left","height","padding","zIndex","top","ribbon","verticalAlign","relaxed","divided","Extra","TestErrors","widths","baseUrl","primary","NotFound","Inline","message","Modal","onClose","setEditMode","isCurrentUser","Tab","Pane","panes","menuItem","pane","menu","onTabChange","activeIndex","handleTabChange","itemsPerRow","objectFit","Meta","PhotoWidgetCropper","imagePreview","setCropper","initialAspectRatio","aspectRatio","preview","guides","viewMode","autoCropArea","background","onInitialized","cropper","PhotoWidgetDropzone","setFiles","dzStyles","borderRadius","paddingTop","onDrop","useCallback","acceptedFiles","URL","createObjectURL","useDropzone","getRootProps","getInputProps","isDragActive","PhotoUploadWidget","files","revokeObjectURL","overflow","getCroppedCanvas","toBlob","blob","addPhotoMode","setAddPhotoMode","target","setTarget","currentTarget","handleSetMainPhoto","handleDeletePhoto","menuPosition","Statistic","PrivateRoute","Component","component","rest","location","useLocation","finally","hideProgressBar","path","HomePage","ActivityDashboard","ActivityDetails","ProfilePage","ServerError","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ScrollToTop","pathname","scrollTo","createBrowserHistory","ReactDOM","Provider","document","getElementById"],"mappings":"+YAQaA,EAIT,WAAYC,EAASC,GAAyB,yBAH9CD,UAG6C,OAF7CC,gBAE6C,EACzCC,KAAKF,KAAOA,EACZE,KAAKD,WAAaA,GAIbE,EAIT,aAA2C,IAA/BC,EAA8B,uDAAjB,EAAGC,EAAc,uDAAH,EAAG,yBAH1CD,gBAG0C,OAF1CC,cAE0C,EACtCH,KAAKE,WAAaA,EAClBF,KAAKG,SAAWA,GCTxBC,IAAMC,SAASC,QAAUC,OAEzBH,IAAMI,aAAaC,QAAQC,KAAI,SAAAC,GAC3B,IAAMC,EAAQC,EAAMC,YAAYF,MAEhC,OADIA,IAAOD,EAAOI,QAAQC,cAAf,iBAAyCJ,IAC7CD,KAGXP,IAAMI,aAAaS,SAASP,IAA5B,+BAAAQ,EAAA,MAAgC,WAAMD,GAAN,eAAAC,EAAA,iFAGtBnB,EAAakB,EAASF,QAAT,YAHS,uBAKxBE,EAASnB,KAAO,IAAID,EAAgBoB,EAASnB,KAAMqB,KAAKC,MAAMrB,IALtC,kBAMjBkB,GANiB,gCAQrBA,GARqB,2CAAhC,uDASG,SAACI,GAAuB,IAAD,EACoBA,EAAMJ,SAAxCnB,EADc,EACdA,KAAMwB,EADQ,EACRA,OAAQX,EADA,EACAA,OAAQI,EADR,EACQA,QAG9B,OAFAQ,QAAQC,IAAIH,EAAMJ,UAEVK,GACJ,KAAK,IAOD,GANoB,kBAATxB,GACP2B,IAAMJ,MAAMvB,GAEM,QAAlBa,EAAOe,QAAoB5B,EAAK6B,OAAOC,eAAe,OACtDC,GAAQC,KAAK,aAEbhC,EAAK6B,OAAQ,CACb,IAAMI,EAAmB,GACzB,IAAK,IAAMC,KAAOlC,EAAK6B,OACf7B,EAAK6B,OAAOK,IACZD,EAAiBD,KAAKhC,EAAK6B,OAAOK,IAG1C,MAAMD,EAAiBE,OAE3B,MACJ,KAAK,IACc,MAAXX,GAAkBP,EAAQ,oBAAoBmB,WAAW,iCACzDrB,EAAMsB,UAAUC,SAChBX,IAAMJ,MAAM,yCAEhB,MACJ,KAAK,IACDQ,GAAQC,KAAK,cACb,MACJ,KAAK,IACDjB,EAAMC,YAAYuB,eAAevC,GACjC+B,GAAQC,KAAK,gBAGrB,OAAOQ,QAAQC,OAAOlB,MAG1B,IAAMmB,EAAe,SAAIvB,GAAJ,OAAmCA,EAASnB,MAE3D2C,EACG,SAAIC,GAAJ,OAAoBtC,IAAMuC,IAAOD,GAAKE,KAAKJ,IAD9CC,EAEI,SAAIC,EAAaG,GAAjB,OAA8BzC,IAAM0C,KAAQJ,EAAKG,GAAMD,KAAKJ,IAFhEC,EAGG,SAAIC,EAAaG,GAAjB,OAA8BzC,IAAM2C,IAAOL,EAAKG,GAAMD,KAAKJ,IAH9DC,EAIM,SAAIC,GAAJ,OAAoBtC,IAAM4C,OAAUN,GAAKE,KAAKJ,IA2C3CS,EAND,CACVC,WAnCe,CACfC,KAAM,SAACC,GAAD,OAA6BhD,IAAMuC,IAAiC,cAAe,CAAES,WAAUR,KAAKJ,IAC1Ga,QAAS,SAACC,GAAD,OAAgBb,EAAA,sBAAsCa,KAC/DC,OAAQ,SAACC,GAAD,OAAkCf,EAAoB,cAAee,IAC7EC,OAAQ,SAACD,GAAD,OAAkCf,EAAA,sBAAkCe,EAASF,IAAME,IAC3FR,OAAQ,SAACM,GAAD,OAAgBb,EAAA,sBAAqCa,KAC7DI,OAAQ,SAACJ,GAAD,OAAgBb,EAAA,sBAAmCa,EAAnC,WAAgD,MA8BxEK,QA3BY,CACZC,QAAS,kBAAMnB,EAAmB,aAClCoB,MAAO,SAACC,GAAD,OAA0BrB,EAAoB,iBAAkBqB,IACvEC,SAAU,SAACD,GAAD,OAA0BrB,EAAoB,oBAAqBqB,IAC7EE,QAAS,SAACC,GAAD,OAAyBxB,EAAA,uCAAoDwB,GAAe,KACrGC,aAAc,kBAAMzB,EAAoB,wBAAyB,MAuBjE0B,SApBa,CACbxB,IAAK,SAACyB,GAAD,OAAsB3B,EAAA,oBAAmC2B,KAC9DC,YAAa,SAACC,GACV,IAAIC,EAAW,IAAIC,SAEnB,OADAD,EAASE,OAAO,OAAQH,GACjBlE,IAAM0C,KAAY,SAAUyB,EAAU,CACzCxD,QAAS,CAAE,eAAgB,0BAGnC2D,aAAc,SAACpB,GAAD,OAAgBb,EAAA,kBAAyBa,EAAzB,YAAuC,KACrEqB,YAAa,SAACrB,GAAD,OAAgBb,EAAA,kBAA2Ba,KACxDsB,cAAe,SAACC,GAAD,OAA+BpC,EAAA,YAA0BoC,IACxEC,gBAAiB,SAACV,GAAD,OAAsB3B,EAAA,kBAAyB2B,GAAY,KAC5EW,eAAgB,SAACX,EAAkBY,GAAnB,OAAyCvC,EAAA,kBAAmC2B,EAAnC,sBAAyDY,KAClHC,eAAgB,SAACb,EAAkBY,GAAnB,OAAyCvC,EAAA,oBAA0C2B,EAA1C,iCAA2EY,OC7F3HE,EACX,WAAYC,GAA4B,oBACtCC,OAAOC,OAAOrF,KAAMmF,IAIXG,EASX,WAAY9B,GAAgC,yBAR5CF,QAAciC,EAQ6B,KAP3CC,MAAgB,GAO2B,KAN3CC,SAAmB,GAMwB,KAL3CC,YAAsB,GAKqB,KAJ3CC,KAAoB,KAIuB,KAH3CC,KAAe,GAG4B,KAF3CC,MAAgB,GAGVrC,IACFxD,KAAKsD,GAAKE,EAASF,GACnBtD,KAAKwF,MAAQhC,EAASgC,MACtBxF,KAAKyF,SAAWjC,EAASiC,SACzBzF,KAAK0F,YAAclC,EAASkC,YAC5B1F,KAAK2F,KAAOnC,EAASmC,KACrB3F,KAAK4F,KAAOpC,EAASoC,KACrB5F,KAAK6F,MAAQrC,EAASqC,Q,SC5BfC,EACT,WAAYhC,GAAa,oBACrB9D,KAAKoE,SAAWN,EAAKM,SACrBpE,KAAK+F,YAAcjC,EAAKiC,YACxB/F,KAAKgG,MAAQlC,EAAKkC,OCTLC,E,WAUjB,aAAe,IAAD,gCATdC,iBAAmB,IAAIC,IAST,KARdC,sBAAyCb,EAQ3B,KAPdc,UAAW,EAOG,KANdC,SAAU,EAMI,KALdC,gBAAiB,EAKH,KAJdxG,WAAgC,KAIlB,KAHdyG,aAAe,IAAIvG,EAGL,KAFd+E,WAAY,IAAImB,KAAMM,IAAI,OAAO,GAEnB,KAadC,gBAAkB,SAACC,GACf,EAAKH,aAAeG,GAdV,KAiBdC,aAAe,SAAC5B,EAAmB6B,GAC/B,IAAMC,EAAiB,WACnB,EAAK9B,UAAU+B,SAAQ,SAACF,EAAO7E,GACf,cAARA,GAAqB,EAAKgD,UAAUhC,OAAOhB,OAGvD,OAAQgD,GACJ,IAAK,MACD8B,IACA,EAAK9B,UAAUyB,IAAI,OAAO,GAC1B,MACJ,IAAK,UACDK,IACA,EAAK9B,UAAUyB,IAAI,WAAW,GAC9B,MACJ,IAAK,SACDK,IACA,EAAK9B,UAAUyB,IAAI,UAAU,GAC7B,MACJ,IAAK,YACD,EAAKzB,UAAUhC,OAAO,aACtB,EAAKgC,UAAUyB,IAAI,YAAaI,KAtC9B,KAwEdG,eAxEc,sBAwEG,4BAAA9F,EAAA,6DACb,EAAKqF,gBAAiB,EADT,kBAGYtD,EAAMC,WAAWC,KAAK,EAAK8D,aAHvC,QAGHC,EAHG,QAIFpH,KAAKiH,SAAQ,SAACvD,GACjB,EAAK2D,YAAY3D,MAErB,EAAK4D,cAAcF,EAAOnH,YAC1B,EAAKsH,mBAAkB,GARd,kDAUT9F,QAAQC,IAAR,MACA,EAAK6F,mBAAkB,GAXd,0DAxEH,KAuFdD,cAAgB,SAACrH,GACb,EAAKA,WAAaA,GAxFR,KA2FduH,aA3Fc,uCA2FC,WAAOhE,GAAP,eAAApC,EAAA,2DACPsC,EAAW,EAAK+D,YAAYjE,IADrB,uBAGP,EAAK8C,iBAAmB5C,EAHjB,kBAIAA,GAJA,cAMP,EAAK+C,gBAAiB,EANf,mBAQctD,EAAMC,WAAWG,QAAQC,GARvC,eAQHE,EARG,OASH,EAAK2D,YAAY3D,GACjB,EAAK4C,iBAAmB5C,EACxB,EAAK6D,mBAAkB,GAXpB,kBAYI7D,GAZJ,kCAcHjC,QAAQC,IAAR,MACA,EAAK6F,mBAAkB,GAfpB,0DA3FD,2DA+GNF,YAAc,SAAC3D,GACnB,IACU,EADJM,EAAOjD,EAAMsB,UAAU2B,KACzBA,IACAN,EAASgE,QAAUhE,EAASiE,UAAWC,MACnC,SAAAxG,GAAC,OAAIA,EAAEkD,WAAaN,EAAKM,YAE7BZ,EAASmE,OAASnE,EAASoE,eAAiB9D,EAAKM,SACjDZ,EAASqE,KAAT,UAAgBrE,EAASiE,iBAAzB,aAAgB,EAAoBK,MAAK,SAAAC,GAAC,OAAIA,EAAE3D,WAAaZ,EAASoE,iBAE1EpE,EAASmC,KAAO,IAAIqC,KAAKxE,EAASmC,MAClC,EAAKO,iBAAiBO,IAAIjD,EAASF,GAAIE,IAzH7B,KA4HN+D,YAAc,SAACjE,GACnB,OAAO,EAAK4C,iBAAiBvD,IAAIW,IA7HvB,KAgId+D,kBAAoB,SAACY,GACjB,EAAK1B,eAAiB0B,GAjIZ,KAqIdC,eArIc,uCAqIG,WAAO1E,GAAP,mBAAAtC,EAAA,6DACP4C,EAAOjD,EAAMsB,UAAU2B,KACvBqE,EAAW,IAAIrC,EAAQhC,GAFhB,kBAIHb,EAAMC,WAAWK,OAAOC,GAJrB,QAKH4E,EAAc,IAAIlD,EAAS1B,IACrBoE,aAAe9D,EAAMM,SACjCgE,EAAYX,UAAY,CAACU,GACzB,EAAKhB,YAAYiB,GACjBC,aAAY,WACR,EAAKjC,iBAAmBgC,KAVnB,kDAaT7G,QAAQC,IAAR,MAbS,0DArIH,2DAuJd8G,eAvJc,uCAuJG,WAAO9E,GAAP,SAAAtC,EAAA,+EAEH+B,EAAMC,WAAWO,OAAOD,GAFrB,OAGT6E,aAAY,WACR,GAAI7E,EAASF,GAAI,CACb,IAAIgF,EAAc,2BAAQ,EAAKf,YAAY/D,EAASF,KAAQE,GAC5D,EAAK0C,iBAAiBO,IAAIjD,EAASF,GAAIgF,GACvC,EAAKlC,iBAAmBkC,MAPvB,+CAYT/G,QAAQC,IAAR,MAZS,wDAvJH,2DAwKd+G,eAxKc,uCAwKG,WAAOjF,GAAP,SAAApC,EAAA,6DACb,EAAKoF,SAAU,EADF,kBAGHrD,EAAMC,WAAWF,OAAOM,GAHrB,OAIT+E,aAAY,WACR,EAAKnC,iBAAiBlD,OAAOM,GAC7B,EAAKgD,SAAU,KANV,gDAST/E,QAAQC,IAAR,MACA6G,aAAY,WACR,EAAK/B,SAAU,KAXV,yDAxKH,2DAwLdkC,iBAxLc,sBAwLK,4BAAAtH,EAAA,6DACT4C,EAAOjD,EAAMsB,UAAU2B,KAC7B,EAAKwC,SAAU,EAFA,kBAILrD,EAAMC,WAAWQ,OAAO,EAAK0C,iBAAkB9C,IAJ1C,OAKX+E,aAAY,WAAO,IAAD,EACd,aAAI,EAAKjC,wBAAT,aAAI,EAAuBoB,QAAS,CAAC,IAAD,EAChC,EAAKpB,iBAAiBqB,UAAtB,UAAkC,EAAKrB,iBAAiBqB,iBAAxD,aAAkC,EAAiCgB,QAAO,SAAAvH,GAAC,OAAIA,EAAEkD,YAAF,OAAeN,QAAf,IAAeA,OAAf,EAAeA,EAAMM,aACpG,EAAKgC,iBAAiBoB,SAAU,MAC7B,CAAC,IAAD,IACGW,EAAW,IAAIrC,EAAQhC,GAC7B,YAAKsC,wBAAL,mBAAuBqB,iBAAvB,SAAkC3F,KAAKqG,GACvC,EAAK/B,iBAAkBoB,SAAU,EAErC,EAAKtB,iBAAiBO,IAAI,EAAKL,iBAAkB9C,GAAI,EAAK8C,qBAdnD,gDAiBX7E,QAAQC,IAAR,MAjBW,yBAmBX6G,aAAY,kBAAM,EAAK/B,SAAU,KAnBtB,4EAxLL,KA+MdoC,qBA/Mc,sBA+MS,sBAAAxH,EAAA,6DACnB,EAAKoF,SAAU,EADI,kBAGTrD,EAAMC,WAAWQ,OAAO,EAAK0C,iBAAkB9C,IAHtC,OAIf+E,aAAY,WAAO,IAAD,EACd,EAAKjC,iBAAkBuC,cAAc,UAAC,EAAKvC,wBAAN,aAAC,EAAuBuC,aAC7D,EAAKzC,iBAAiBO,IAAI,EAAKL,iBAAkB9C,GAAI,EAAK8C,qBAN/C,gDASf7E,QAAQC,IAAR,MATe,yBAWf6G,aAAY,kBAAM,EAAK/B,SAAU,KAXlB,4EA/MT,KA8NdsC,sBAAwB,WACpB,EAAKxC,sBAAmBb,GA/Nd,KAkOdsD,wBAA0B,SAACzE,GACvB,EAAK8B,iBAAiBa,SAAQ,SAAAvD,GAC1BA,EAASiE,UAAUV,SAAQ,SAAAoB,GACnBA,EAAS/D,WAAaA,IACtB+D,EAASW,UAAYX,EAASY,iBAAmBZ,EAASY,iBAC1DZ,EAASW,WAAaX,EAASW,kBAtO3CE,YAAmBhJ,MAEnBiJ,aACI,kBAAM,EAAKjE,UAAUkE,UACrB,WACI,EAAK1C,aAAe,IAAIvG,EACxB,EAAKiG,iBAAiBiD,QACtB,EAAKnC,oB,6CAkCjB,WACI,IAAM5D,EAAS,IAAIgG,gBAWnB,OAVAhG,EAAOqB,OAAO,aAAczE,KAAKwG,aAAatG,WAAWmJ,YACzDjG,EAAOqB,OAAO,WAAYzE,KAAKwG,aAAarG,SAASkJ,YACrDrJ,KAAKgF,UAAU+B,SAAQ,SAACF,EAAO7E,GACf,cAARA,EACAoB,EAAOqB,OAAOzC,EAAM6E,EAAeyC,eAEnClG,EAAOqB,OAAOzC,EAAK6E,MAIpBzD,I,4BAGX,WACI,OAAOmG,MAAMC,KAAKxJ,KAAKkG,iBAAiBuD,UAAUC,MAAK,SAACxI,EAAGyI,GAAJ,OACnDzI,EAAEyE,KAAMiE,UAAYD,EAAEhE,KAAMiE,e,2BAGpC,WACI,OAAOxE,OAAOyE,QACV7J,KAAK8J,iBAAiBC,QAAO,SAACC,EAAYxG,GACtC,IAAMmC,EAAOsE,YAAOzG,EAASmC,KAAO,eAEpC,OADAqE,EAAWrE,GAAQqE,EAAWrE,GAAX,sBAAuBqE,EAAWrE,IAAlC,CAAyCnC,IAAY,CAACA,GAClEwG,IACR,S,cCjFME,E,WAWjB,aAAe,IAAD,gCAVdrF,QAA0B,KAUZ,KATdsF,gBAAiB,EASH,KARdC,WAAY,EAQE,KAPd9D,SAAU,EAOI,KANd+D,WAAwB,GAMV,KALdC,mBAA6B,EAKf,KAJdC,UAAoB,EAIN,KAHdC,eAAiC,GAGnB,KAFdC,mBAAoB,EAEN,KAedC,aAAe,SAACH,GACZ,EAAKA,UAAYA,GAhBP,KA2BdI,YA3Bc,uCA2BA,WAAOvG,GAAP,eAAAlD,EAAA,6DACV,EAAKiJ,gBAAiB,EADZ,kBAGgBlH,EAAMkB,SAASxB,IAAIyB,GAHnC,OAGAS,EAHA,OAINwD,aAAY,WACR,EAAKxD,QAAUA,EACf,EAAKsF,gBAAiB,KANpB,gDASN5I,QAAQC,IAAR,MACA6G,aAAY,kBAAM,EAAK8B,gBAAiB,KAVlC,yDA3BA,2DAyCd9F,YAzCc,uCAyCA,WAAOC,GAAP,iBAAApD,EAAA,6DACV,EAAKkJ,WAAY,EADP,kBAGiBnH,EAAMkB,SAASE,YAAYC,GAH5C,OAGArD,EAHA,OAIA2J,EAAQ3J,EAASnB,KACvBuI,aAAY,WACW,IAAD,EAAd,EAAKxD,UACL,YAAKA,QAAQgG,cAAb,SAAqB/I,KAAK8I,GACtBA,EAAME,QAAUjK,EAAMsB,UAAU2B,OAChCjD,EAAMsB,UAAU4I,SAASH,EAAMlI,KAC/B,EAAKmC,QAAQmB,MAAQ4E,EAAMlI,MAGnC,EAAK0H,WAAY,KAbf,gDAgBN7I,QAAQC,IAAR,MACA6G,aAAY,kBAAM,EAAK+B,WAAY,KAjB7B,yDAzCA,2DA+Dd1F,aA/Dc,uCA+DC,WAAOkG,GAAP,SAAA1J,EAAA,6DACX,EAAKoF,SAAU,EADJ,kBAGDrD,EAAMkB,SAASO,aAAakG,EAAMtH,IAHjC,OAIPzC,EAAMsB,UAAU4I,SAASH,EAAMlI,KAC/B2F,aAAY,WAAO,IAAD,EACV,EAAKxD,UAAL,UAAgB,EAAKA,eAArB,aAAgB,EAAcgG,UAC9B,EAAKhG,QAAQgG,OAAO/C,MAAK,SAAAkD,GAAC,OAAIA,EAAEF,UAASA,QAAS,EAClD,EAAKjG,QAAQgG,OAAO/C,MAAK,SAAAkD,GAAC,OAAIA,EAAE1H,KAAOsH,EAAMtH,MAAKwH,QAAS,EAC3D,EAAKjG,QAAQmB,MAAQ4E,EAAMlI,IAC3B,EAAK4D,SAAU,MAVhB,gDAcP+B,aAAY,kBAAM,EAAK/B,SAAU,KACjC/E,QAAQC,IAAR,MAfO,yDA/DD,2DAmFdmD,YAnFc,uCAmFA,WAAOiG,GAAP,SAAA1J,EAAA,6DACV,EAAKoF,SAAU,EADL,kBAGArD,EAAMkB,SAASQ,YAAYiG,EAAMtH,IAHjC,OAIN+E,aAAY,WACW,IAAD,EAAd,EAAKxD,UACL,EAAKA,QAAQgG,OAAb,UAAsB,EAAKhG,QAAQgG,cAAnC,aAAsB,EAAqBpC,QAAO,SAAAuC,GAAC,OAAIA,EAAE1H,KAAOsH,EAAMtH,MACtE,EAAKgD,SAAU,MAPjB,gDAWN/E,QAAQC,IAAR,MACA6G,aAAY,kBAAM,EAAK/B,SAAU,KAZ3B,yDAnFA,2DAoGd1B,cApGc,uCAoGE,WAAOC,GAAP,SAAA3D,EAAA,6DACZ,EAAKoF,SAAU,EADH,kBAGFrD,EAAMkB,SAASS,cAAcC,GAH3B,OAIRwD,aAAY,WAAO,IAAD,EACVxD,EAAQkB,aAAelB,EAAQkB,eAAR,UAAwBlF,EAAMsB,UAAU2B,YAAxC,aAAwB,EAAsBiC,cACrElF,EAAMsB,UAAU8I,eAAepG,EAAQkB,aAE3C,EAAKlB,QAAL,2BAAoB,EAAKA,SAAYA,GACrC,EAAKyB,SAAU,KATX,gDAYR/E,QAAQC,IAAR,MACA6G,aAAY,kBAAM,EAAK/B,SAAU,KAbzB,yDApGF,2DAqHdxB,gBArHc,uCAqHI,WAAOV,EAAkB0E,GAAzB,SAAA5H,EAAA,6DACd,EAAKoF,SAAU,EADD,kBAGJrD,EAAMkB,SAASW,gBAAgBV,GAH3B,OAIVvD,EAAMqK,cAAcrC,wBAAwBzE,GAC5CiE,aAAY,WAAO,IAAD,IACV,EAAKxD,SAAW,EAAKA,QAAQT,YAAb,UAA0BvD,EAAMsB,UAAU2B,YAA1C,aAA0B,EAAsBM,WAAY,EAAKS,QAAQT,WAAaA,IACtG0E,EAAY,EAAKjE,QAAQkE,iBAAmB,EAAKlE,QAAQkE,iBACzD,EAAKlE,QAAQiE,WAAa,EAAKjE,QAAQiE,WAEvC,EAAKjE,SAAW,EAAKA,QAAQT,YAAb,UAA0BvD,EAAMsB,UAAU2B,YAA1C,aAA0B,EAAsBM,YAChE0E,EAAY,EAAKjE,QAAQsG,iBAAmB,EAAKtG,QAAQsG,kBAE7D,EAAKd,WAAWtD,SAAQ,SAAAlC,GAChBA,EAAQT,WAAaA,IACrBS,EAAQiE,UAAYjE,EAAQkE,iBAAmBlE,EAAQkE,iBACvDlE,EAAQiE,WAAajE,EAAQiE,cAGrC,EAAKxC,SAAU,KAnBT,gDAsBV/E,QAAQC,IAAR,MACA6G,aAAY,kBAAM,EAAK/B,SAAU,KAvBvB,yDArHJ,6DAgJd8E,eAhJc,uCAgJG,WAAOpG,GAAP,eAAA9D,EAAA,6DACb,EAAKoJ,mBAAoB,EADZ,kBAGgBrH,EAAMkB,SAASY,eAAe,EAAKF,QAAST,SAAUY,GAHtE,OAGHqF,EAHG,OAIThC,aAAY,WACR,EAAKgC,WAAaA,EAClB,EAAKC,mBAAoB,KANpB,gDAST/I,QAAQC,IAAR,MACA6G,aAAY,kBAAM,EAAKiC,mBAAoB,KAVlC,yDAhJH,2DA+Jde,mBA/Jc,uCA+JO,WAAOjH,EAAkBY,GAAzB,eAAA9D,EAAA,6DACjB,EAAKuJ,mBAAoB,EADR,kBAGYxH,EAAMkB,SAASc,eAAeb,EAAUY,GAHpD,OAGPgF,EAHO,OAIb3B,aAAY,WACR,EAAKmC,eAAiBR,EACtB,EAAKS,mBAAoB,KANhB,gDASblJ,QAAQC,IAAR,MACA6G,aAAY,WACR,EAAKoC,mBAAoB,KAXhB,yDA/JP,wDACVzB,YAAmBhJ,MACnBiJ,aACI,kBAAM,EAAKsB,aACX,SAAAA,GACI,GAAkB,IAAdA,GAAiC,IAAdA,EAAiB,CACpC,IAAMvF,EAA0B,IAAduF,EAAkB,YAAc,YAClD,EAAKa,eAAepG,QAEpB,EAAKqF,WAAa,M,+CAUlC,WACI,SAAIxJ,EAAMsB,UAAU2B,OAAQ9D,KAAK6E,UACtBhE,EAAMsB,UAAU2B,KAAKM,WAAapE,KAAK6E,QAAQT,a,KC/B7CkH,E,WAMjB,aAAe,IAAD,gCALdxH,KAAoB,KAKN,KAJdyH,cAA+B,KAIjB,KAHdC,WAAY,EAGE,KAFdC,yBAEc,OAQd5H,MARc,uCAQN,WAAO6H,GAAP,eAAAxK,EAAA,+EAEmB+B,EAAMU,QAAQE,MAAM6H,GAFvC,OAEM5H,EAFN,OAGAjD,EAAMC,YAAY6K,SAAS7H,EAAKlD,OAChC,EAAKgL,uBAAuB9H,GAC5BuE,aAAY,kBAAM,EAAKvE,KAAOA,KAC9BjC,GAAQC,KAAK,eACbjB,EAAMgL,WAAWC,aAPjB,uHARM,2DAqBd1J,OAAS,WACLvB,EAAMC,YAAY6K,SAAS,MAC3BI,OAAOC,aAAaC,WAAW,OAC/B,EAAKnI,KAAO,KACZjC,GAAQC,KAAK,MAzBH,KA4BdoK,QA5Bc,sBA4BJ,4BAAAhL,EAAA,+EAEiB+B,EAAMU,QAAQC,UAF/B,OAEIE,EAFJ,OAGFjD,EAAMC,YAAY6K,SAAS7H,EAAKlD,OAChCyH,aAAY,kBAAM,EAAKvE,KAAOA,KAC9B,EAAK8H,uBAAuB9H,GAL1B,gDAOFvC,QAAQC,IAAR,MAPE,yDA5BI,KAwCduC,SAxCc,uCAwCH,WAAO2H,GAAP,eAAAxK,EAAA,+EAEgB+B,EAAMU,QAAQI,SAAS2H,GAFvC,OAEG5H,EAFH,OAGHjD,EAAMC,YAAY6K,SAAS7H,EAAKlD,OAChC,EAAKgL,uBAAuB9H,GAC5BuE,aAAY,kBAAM,EAAKvE,KAAOA,KAC9BjC,GAAQC,KAAK,eACbjB,EAAMgL,WAAWC,aAPd,uHAxCG,2DAqDdf,SAAW,SAAC/E,GACJ,EAAKlC,OAAM,EAAKA,KAAKkC,MAAQA,IAtDvB,KAyDdiF,eAAiB,SAACkB,GACV,EAAKrI,OAAM,EAAKA,KAAKiC,YAAcoG,IA1D7B,KA6DdC,uBA7Dc,sBA6DW,sBAAAlL,EAAA,sDACrB6K,OAAOM,GAAGC,gBAAe,SAAArL,GACG,cAApBA,EAASK,SACT,EAAKiK,cAAgBtK,EAASsL,aAAatI,gBAH9B,2CA7DX,KAqEduI,cAAgB,WACZ,EAAKhB,WAAY,EACjB,IAAMiB,EAAW,SAACxI,GACdhB,EAAMU,QAAQK,QAAQC,GAAarB,MAAK,SAAAkB,GACpCjD,EAAMC,YAAY6K,SAAS7H,EAAKlD,OAChC,EAAKgL,uBAAuB9H,GAC5BuE,aAAY,WACR,EAAKvE,KAAOA,EACZ,EAAK0H,WAAY,KAErB3J,GAAQC,KAAK,kBACd4K,OAAM,SAAArL,GACLE,QAAQC,IAAIH,GACZgH,aAAY,kBAAM,EAAKmD,WAAY,SAGvC,EAAKD,cACLkB,EAAS,EAAKlB,eAEdQ,OAAOM,GAAGxI,OAAM,SAAA5C,GACZwL,EAASxL,EAASsL,aAAatI,eAChC,CAAE0I,MAAO,2BA1FN,KA8FdzI,aA9Fc,sBA8FC,4BAAAhD,EAAA,6DACX,EAAK0L,wBADM,kBAGY3J,EAAMU,QAAQO,eAH1B,OAGDJ,EAHC,OAIPuE,aAAY,kBAAM,EAAKvE,KAAOA,KAC9BjD,EAAMC,YAAY6K,SAAS7H,EAAKlD,OAChC,EAAKgL,uBAAuB9H,GANrB,kDAQPvC,QAAQC,IAAR,MARO,0DA7FXwH,YAAmBhJ,M,4CAGvB,WACI,QAASA,KAAK8D,O,oCAsGlB,SAA+BA,GAC3B,IAAM+I,EAAW1L,KAAKC,MAAM0L,KAAKhJ,EAAKlD,MAAMmM,MAAM,KAAK,KAEjDC,EADU,IAAIhF,KAAoB,IAAf6E,EAASI,KACVrD,UAAY5B,KAAKkF,MAAS,IAClDlN,KAAKyL,oBAAsB0B,WAAWnN,KAAKkE,aAAc8I,K,mCAG7D,WACII,aAAapN,KAAKyL,yB,KC9Gb5K,EAAe,CACxBqK,cAAe,IAAIjF,EACnBnF,YAAa,ICXb,aAAe,IAAD,gCAJdO,MAA4B,KAId,KAHdT,MAAuBmL,OAAOC,aAAaqB,QAAQ,OAGrC,KAFdC,WAAY,EAEE,KAedjL,eAAiB,SAAChB,GACd,EAAKA,MAAQA,GAhBH,KAmBdsK,SAAW,SAAC/K,GACR,EAAKA,MAAQA,GApBH,KAuBd2M,aAAe,WACX,EAAKD,WAAY,GAvBjBtE,YAAmBhJ,MAEnBiJ,aACI,kBAAM,EAAKrI,SACX,SAAAA,GACQA,EACAmL,OAAOC,aAAawB,QAAQ,MAAO5M,GAEnCmL,OAAOC,aAAaC,WAAW,WDG/C9J,UAAW,IAAImJ,EACfO,WAAY,IERZ,aAAe,IAAD,gCALd4B,MAAe,CACXC,MAAM,EACN7K,KAAM,MAGI,KAId8K,UAAY,SAACC,GACT,EAAKH,MAAMC,MAAO,EAClB,EAAKD,MAAM5K,KAAO+K,GANR,KASd9B,WAAa,WACT,EAAK2B,MAAMC,MAAO,EAClB,EAAKD,MAAM5K,KAAO,MAVlBmG,YAAmBhJ,OFQvB6N,aAAc,IAAI3D,EAClB4D,aAAc,IGdd,aAAe,IAAD,gCAHdC,SAA0B,GAGZ,KAFdC,cAAsC,KAExB,KAIdC,oBAAsB,SAACC,GACfrN,EAAMqK,cAAc9E,mBACpB,EAAK4H,eAAgB,IAAIG,KACpBC,QAAQ7N,oBAAkD2N,EAAY,CACnEG,mBAAoB,kCAAMxN,EAAMsB,UAAU2B,YAAtB,aAAM,EAAsBlD,SAEnD0N,yBACAC,iBAAiBC,IAASC,aAC1BC,QAEL,EAAKV,cAAcW,QAAQjC,OAAM,SAAArL,GAAK,OAAIE,QAAQC,IAAI,sCAAuCH,MAE7F,EAAK2M,cAAcY,GAAG,gBAAgB,SAACb,GACnC1F,aAAY,WACR0F,EAAShH,SAAQ,SAAA8H,GACbA,EAAQC,SAAW,IAAI9G,KAAK6G,EAAQC,SAAW,QAEnD,EAAKf,SAAWA,QAIxB,EAAKC,cAAcY,GAAG,kBAAkB,SAACC,GACrCxG,aAAY,WACRwG,EAAQC,SAAW,IAAI9G,KAAK6G,EAAQC,UACpC,EAAKf,SAASgB,QAAQF,WA5BxB,KAkCdG,kBAAoB,WAAO,IAAD,EACtB,YAAKhB,qBAAL,SAAoBiB,OAAOvC,OAAM,SAAArL,GAAK,OAAIE,QAAQC,IAAI,8BAA+BH,OAnC3E,KAsCd6N,cAAgB,WACZ,EAAKnB,SAAW,GAChB,EAAKiB,qBAxCK,KA2CdG,WA3Cc,uCA2CD,WAAO1F,GAAP,iBAAAvI,EAAA,6DACTuI,EAAOyE,WAAP,UAAoBrN,EAAMqK,cAAc9E,wBAAxC,aAAoB,EAAsC9C,GADjD,4BAGC,EAAK0K,qBAHN,aAGC,EAAoBoB,OAAO,cAAe3F,GAH3C,sDAKLlI,QAAQC,IAAR,MALK,wDA3CC,sDACVwH,YAAmBhJ,QHgBdqP,EAAeC,wBAAczO,GAEnC,SAAS0O,IACZ,OAAOC,qBAAWH,G,WIyBPI,eAhDA,WAAO,IAAD,EAGfF,IADFpN,UAAa2B,EAFI,EAEJA,KAAM1B,EAFF,EAEEA,OAErB,OACE,cAACsN,EAAA,EAAD,CAAMC,UAAQ,EAACC,MAAM,MAArB,SACE,eAACC,EAAA,EAAD,WACE,eAACH,EAAA,EAAKI,KAAN,CAAWC,GAAIC,IAASC,GAAG,IAAIC,OAAK,EAACC,QAAM,EAA3C,UACE,qBACEC,IAAI,mBACJC,IAAI,OACJC,MAAO,CAAEC,YAAa,UAJ1B,iBAQA,cAACb,EAAA,EAAKI,KAAN,CAAWC,GAAIC,IAASC,GAAG,cAAc9D,KAAK,eAC9C,cAACuD,EAAA,EAAKI,KAAN,CAAWC,GAAIC,IAASC,GAAG,UAAU9D,KAAK,WAC1C,cAACuD,EAAA,EAAKI,KAAN,UACE,cAACU,EAAA,EAAD,CACET,GAAIC,IACJC,GAAG,kBACHQ,UAAQ,EACR7C,QAAQ,sBAGZ,eAAC8B,EAAA,EAAKI,KAAN,CAAWY,SAAS,QAApB,UACE,cAACC,EAAA,EAAD,CACEP,KAAS,OAAJtM,QAAI,IAAJA,OAAA,EAAAA,EAAMkC,QAAS,mBACpB4K,QAAM,EACNC,OAAO,UAET,cAACC,EAAA,EAAD,CAAUC,SAAS,WAAWC,KAAI,OAAElN,QAAF,IAAEA,OAAF,EAAEA,EAAMiC,YAA1C,SACE,eAAC+K,EAAA,EAASpB,KAAV,WACE,cAACoB,EAAA,EAAShB,KAAV,CACEC,GAAIkB,IACJhB,GAAE,2BAAenM,QAAf,IAAeA,OAAf,EAAeA,EAAMM,UACvB4M,KAAK,aACLE,KAAK,SAEP,cAACJ,EAAA,EAAShB,KAAV,CAAeqB,QAAS/O,EAAQ4O,KAAK,SAASE,KAAK,0B,8DCNlDzB,eAjCS,WAAO,IAAD,EAGxBF,IADFrE,cAAiBlG,EAFS,EAETA,UAAW4B,EAFF,EAEEA,aAE9B,OACE,qCACE,eAAC8I,EAAA,EAAD,CAAM0B,UAAQ,EAACC,KAAK,QAAQf,MAAO,CAAEgB,MAAO,OAAQC,UAAW,IAA/D,UACE,cAACC,EAAA,EAAD,CAAQN,KAAK,SAASO,UAAQ,EAACC,MAAM,OAAO9D,QAAQ,YACpD,cAAC8B,EAAA,EAAKI,KAAN,CACElC,QAAQ,iBACR+D,OAAQ3M,EAAU4M,IAAI,OACtBT,QAAS,kBAAMvK,EAAa,MAAO,WAErC,cAAC8I,EAAA,EAAKI,KAAN,CACElC,QAAQ,YACR+D,OAAQ3M,EAAU4M,IAAI,WACtBT,QAAS,kBAAMvK,EAAa,UAAW,WAEzC,cAAC8I,EAAA,EAAKI,KAAN,CACElC,QAAQ,cACR+D,OAAQ3M,EAAU4M,IAAI,UACtBT,QAAS,kBAAMvK,EAAa,SAAU,cAG1C,cAAC4K,EAAA,EAAD,IACA,cAAC,IAAD,CACEK,SAAU,SAAClM,GAAD,OAAUiB,EAAa,YAAajB,IAC9CkB,MAAO7B,EAAUrC,IAAI,cAAgB,IAAIqF,a,8ECalCyH,gBApCM,SAAC,GAAwB,IAAD,EAArB5K,EAAqB,EAArBA,QAAqB,EACP0K,IAA5B1B,EADmC,EACnCA,aAAc1L,EADqB,EACrBA,UACd2C,EAA6B+I,EAA7B/I,gBAAiBwB,EAAYuH,EAAZvH,QAEzB,IAAI,UAAAnE,EAAU2B,YAAV,eAAgBM,YAAaS,EAAQT,SAAU,OAAO,KAS1D,OACE,eAAC0N,GAAA,EAAD,CAAQC,SAAS,OAAjB,UACE,cAACD,GAAA,EAAOE,QAAR,CAAgBC,SAAO,EAAC3B,MAAO,CAAEgB,MAAO,QAAxC,SACE,cAACd,EAAA,EAAD,CACE0B,OAAK,EACLR,MAAM,OACN9D,QAAS/I,EAAQiE,UAAY,YAAc,oBAG/C,cAACgJ,GAAA,EAAOE,QAAR,CAAgBG,QAAM,EAAC7B,MAAO,CAAEgB,MAAO,QAAvC,SACE,cAACd,EAAA,EAAD,CACE0B,OAAK,EACLE,OAAK,EACLV,MAAO7M,EAAQiE,UAAY,MAAQ,QACnC8E,QAAS/I,EAAQiE,UAAY,WAAa,SAC1CxC,QAASA,EACT6K,QAAS,SAACkB,GAAD,OAvBjB,SAAsBA,EAAmBjO,GACvCiO,EAAEC,iBACFzN,EAAQiE,UACJhE,EAAgBV,GAAU,GAC1BU,EAAgBV,GAAU,GAmBRmO,CAAaF,EAAGxN,EAAQT,qBCLnCqL,gBAvBK,SAAC,GAAwB,IAAtB5K,EAAqB,EAArBA,QAOrB,OACE,eAAC2N,GAAA,EAAD,CAAMzC,GAAIkB,IAAMhB,GAAE,oBAAepL,EAAQT,UAAzC,UACE,cAACuM,EAAA,EAAD,CAAOP,IAAKvL,EAAQmB,OAAS,qBAC7B,eAACwM,GAAA,EAAKR,QAAN,WACE,cAACQ,GAAA,EAAKhB,OAAN,UAAc3M,EAAQkB,cACtB,cAACyM,GAAA,EAAKC,YAAN,UAXN,SAAkBC,GAChB,GAAIA,EACF,OAAOA,EAAIC,OAAS,GAAKD,EAAIE,UAAU,EAAG,IAAM,MAAQF,EASnCG,CAAShO,EAAQiO,UAEtC,eAACN,GAAA,EAAKR,QAAN,CAAce,OAAK,EAAnB,UACE,cAACC,GAAA,EAAD,CAAM7G,KAAK,SACVtH,EAAQkE,eAFX,gBAIA,cAAC,GAAD,CAAclE,QAASA,UCkBd4K,gBApCkB,SAAC,GAA0B,IAAxBhI,EAAuB,EAAvBA,UAC5BwL,EAAS,CACbC,YAAa,SACbC,YAAa,GAGf,OACE,cAACC,GAAA,EAAD,CAAMC,YAAU,EAAhB,SACG5L,EAAU6L,KAAI,SAACnL,GAAD,OACb,cAACoL,GAAA,EAAD,CACEC,WAAS,EAETC,QACE,cAACL,GAAA,EAAKtD,KAAN,CAEEC,GAAIkB,IACJhB,GAAE,oBAAe9H,EAAS/D,UAH5B,SAKE,cAACuM,EAAA,EAAD,CACEU,KAAK,OACLqC,UAAQ,EACRtD,IAAKjI,EAASnC,OAAS,mBACvB2N,UAAQ,EACRrD,MAAOnI,EAASW,UAAYmK,EAAS,QATlC9K,EAAS/D,UALpB,SAmBE,cAACmP,GAAA,EAAMvB,QAAP,UACE,cAAC,GAAD,CAAanN,QAASsD,OAlBnBA,EAAS/D,kBCZXwP,GAAmB,SAAC,GAAyB,IAAD,IAAtBpQ,EAAsB,EAAtBA,SACjC,OACE,eAACqQ,EAAA,EAAQC,MAAT,WACE,eAACD,EAAA,EAAD,WACGrQ,EAASmF,aACR,cAACoL,GAAA,EAAD,CACEtC,SAAS,MACTC,MAAM,MACN9D,QAAQ,YACR0C,MAAO,CAAE0D,UAAW,YAGxB,cAAClE,GAAA,EAAKgE,MAAN,UACE,eAAChE,GAAA,EAAD,WACE,cAACA,GAAA,EAAKa,MAAN,CACEL,MAAO,CAAE2D,aAAc,GACvB5C,KAAK,OACLqC,UAAQ,EACRtD,KAAK,UAAA5M,EAASqE,YAAT,eAAe7B,QAAS,qBAE/B,eAAC8J,GAAA,EAAKkC,QAAN,WACE,cAAClC,GAAA,EAAK0B,OAAN,CAAazB,GAAIkB,IAAMhB,GAAE,sBAAiBzM,EAASF,IAAnD,SACGE,EAASgC,QAEZ,eAACsK,GAAA,EAAK2C,YAAN,qBACU,IACR,cAAC,IAAD,CAAMxC,GAAE,oBAAezM,EAASoE,cAAhC,mBACGpE,EAASqE,YADZ,aACG,EAAe9B,cACV,OAETvC,EAASmE,QACR,cAACmI,GAAA,EAAK2C,YAAN,UACE,cAACsB,GAAA,EAAD,CAAO3B,OAAK,EAACV,MAAM,SAAnB,6CAKHlO,EAASgE,UAAYhE,EAASmE,QAC7B,cAACmI,GAAA,EAAK2C,YAAN,UACE,cAACsB,GAAA,EAAD,CAAO3B,OAAK,EAACV,MAAM,QAAnB,yDASZ,cAACmC,EAAA,EAAD,UACE,iCACE,cAACb,GAAA,EAAD,CAAM7G,KAAK,UADb,IACyBlC,YAAOzG,EAASmC,KAAO,uBAC9C,cAACqN,GAAA,EAAD,CAAM7G,KAAK,WAFb,IAE0B3I,EAASqC,WAGrC,cAACgO,EAAA,EAAD,CAASK,WAAS,EAAlB,SACE,cAAC,GAAD,CAA0BzM,UAAWjE,EAASiE,cAEhD,eAACoM,EAAA,EAAD,CAASM,UAAQ,EAAjB,UACE,+BAAO3Q,EAASkC,cAChB,cAAC8K,EAAA,EAAD,CACET,GAAIkB,IACJhB,GAAE,sBAAiBzM,EAASF,IAC5BoO,MAAM,OACN0C,QAAQ,QACRxG,QAAQ,gBChDH6B,gBApBM,WAAO,IAElB4E,EADkB9E,IAAlBrE,cACAmJ,gBAER,OACE,mCACGA,EAAgBf,KAAI,mCAAEgB,EAAF,KAAStK,EAAT,YACnB,eAAC,WAAD,WACE,cAACwH,EAAA,EAAD,CAAQ+C,KAAG,EAAC7C,MAAM,OAAlB,SACG4C,IAEFtK,EAAWsJ,KAAI,SAAC9P,GAAD,OACd,cAAC,GAAD,CAAoCA,SAAUA,GAAvBA,EAASF,SALrBgR,W,UCVR,SAASE,KACpB,OACI,cAAC,WAAD,UACI,cAACC,GAAA,EAAD,CAAavC,OAAK,EAAC5B,MAAO,CAAEiB,UAAW,IAAvC,SACI,eAACsC,EAAA,EAAQC,MAAT,WACI,cAACD,EAAA,EAAD,CAASvD,MAAO,CAAEoE,UAAW,KAA7B,SACI,eAACD,GAAA,EAAD,WACI,eAACA,GAAA,EAAYjD,OAAb,CAAoBxL,OAAK,EAAzB,UACI,cAACyO,GAAA,EAAYE,KAAb,IACA,cAACF,GAAA,EAAYE,KAAb,OAEJ,cAACF,GAAA,EAAYG,UAAb,UACI,cAACH,GAAA,EAAYE,KAAb,WAIZ,cAACd,EAAA,EAAD,UACI,eAACY,GAAA,EAAD,WACI,cAACA,GAAA,EAAYE,KAAb,IACA,cAACF,GAAA,EAAYE,KAAb,SAGR,cAACd,EAAA,EAAD,CAASK,WAAS,EAAC5D,MAAO,CAAEoE,UAAW,MACvC,cAACb,EAAA,EAAD,CAASM,UAAQ,EAAjB,SACI,cAAC3D,EAAA,EAAD,CAAQqE,UAAQ,EAACnD,MAAM,OAAO0C,QAAQ,QAAQxG,QAAQ,kBCjB9E,IAgDe6B,gBAhDW,WAAO,IACvBvE,EAAkBqE,IAAlBrE,cACAlE,EACNkE,EADMlE,eAAgBd,EACtBgF,EADsBhF,iBAAkBQ,EACxCwE,EADwCxE,gBAAiB3G,EACzDmL,EADyDnL,WAF7B,EAIQ+U,oBAAS,GAJjB,mBAIvBC,EAJuB,KAIVC,EAJU,KAgB9B,OAJAC,qBAAU,WACJ/O,EAAiBmL,MAAQ,GAAGrK,MAC/B,CAACd,EAAiBmL,KAAMrK,IAGzB,eAACkO,EAAA,EAAD,WACE,cAACA,EAAA,EAAKC,OAAN,CAAa7D,MAAM,KAAnB,SACGpG,EAAc3E,iBAAmBwO,EAChC,qCACE,cAACP,GAAD,IACA,cAACA,GAAD,OAGF,cAAC,IAAD,CACEY,UAAW,EACXC,SArBV,WACEL,GAAe,GACftO,EAAgB,IAAIzG,EAAaF,EAAYuV,YAAc,IAC3DtO,IAAiBpE,MAAK,kBAAMoS,GAAe,OAmBnCO,SACGR,KACChV,GACFA,EAAWuV,YAAcvV,EAAWyV,WAEtCC,aAAa,EARf,SAUE,cAAC,GAAD,QAIN,cAACP,EAAA,EAAKC,OAAN,CAAa7D,MAAM,IAAnB,SACE,cAAC,EAAD,MAEF,cAAC4D,EAAA,EAAKC,OAAN,CAAa7D,MAAO,GAApB,SACE,cAACoE,EAAA,EAAD,CAAQ/D,OAAQoD,Y,sCC3BTY,GAfK,SAACC,GAAkB,IAAD,EACdC,aAASD,EAAMzJ,MADD,mBAC7B2J,EAD6B,KACtBC,EADsB,KAEpC,OACE,eAACC,GAAA,EAAKC,MAAN,CAAY5U,MAAO0U,EAAKG,WAAaH,EAAK1U,MAA1C,UACE,gCAAQuU,EAAMO,QACd,iDAAWL,GAAWF,IACrBG,EAAKG,SAAWH,EAAK1U,MACpB,cAAC0S,GAAA,EAAD,CAAO3B,OAAK,EAACV,MAAM,MAAnB,SACGqE,EAAK1U,QAEN,SC8BKoO,gBA5CG,WAAO,IACftN,EAAcoN,IAAdpN,UACR,OACE,cAAC,KAAD,CACEiU,cAAe,CAAEC,MAAO,GAAIC,SAAU,GAAIjV,MAAO,MACjDkV,SAAU,SAAC9M,EAAD,OAAW+M,EAAX,EAAWA,UAAX,OACRrU,EACG0B,MAAM4F,GACNiD,OAAM,SAACrL,GAAD,OAAWmV,EAAU,CAAEnV,MAAO,kCAL3C,SAQG,gBAAGoV,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,aAAc/U,EAA/B,EAA+BA,OAA/B,OACC,eAAC,KAAD,CAAMgV,UAAU,UAAUJ,SAAUE,EAAcG,aAAa,MAA/D,UACE,cAACpF,EAAA,EAAD,CACEzB,GAAG,KACHnC,QAAQ,wBACR8D,MAAM,OACNsC,UAAU,WAEZ,cAAC,GAAD,CAAa7H,KAAK,QAAQ0K,YAAY,UACtC,cAAC,GAAD,CAAa1K,KAAK,WAAW0K,YAAY,WAAWC,KAAK,aACzD,cAAC,KAAD,CACE3K,KAAK,QACL4K,OAAQ,kBACN,cAAChD,GAAA,EAAD,CACEzD,MAAO,CAAE2D,aAAc,IACvB7B,OAAK,EACLV,MAAM,MACN9D,QAASjM,EAAON,WAItB,cAACmP,EAAA,EAAD,CACElK,QAASoQ,EACTjG,UAAQ,EACR7C,QAAQ,QACRkJ,KAAK,SACL5E,OAAK,a,mBCrCJ8E,GAAmB,SAAC,GAAuB,IAArBrV,EAAoB,EAApBA,OACjC,OACE,cAACsV,GAAA,EAAD,CAAS5V,OAAK,EAAd,SACGM,GACC,cAACsV,GAAA,EAAQ7D,KAAT,UACGzR,EAAO2R,KAAI,SAAC4D,EAAUC,GAAX,OACV,cAACF,GAAA,EAAQnH,KAAT,UAAuBoH,GAAJC,WC8ChB1H,gBAlDM,WAAO,IAClBtN,EAAcoN,IAAdpN,UACR,OACE,cAAC,KAAD,CACEiU,cAAe,CACbrQ,YAAa,GACb3B,SAAU,GACViS,MAAO,GACPC,SAAU,GACVjV,MAAO,MAETkV,SAAU,SAAC9M,EAAD,OAAW+M,EAAX,EAAWA,UAAX,OACRrU,EAAU4B,SAAS0F,GAAQiD,OAAM,SAACrL,GAAD,OAAWmV,EAAU,CAAEnV,cAE1D+V,iBAAkBC,KAAW,CAC3BtR,YAAasR,OAAaC,WAC1BlT,SAAUiT,OAAaC,WACvBjB,MAAOgB,OAAaC,WAAWjB,QAC/BC,SAAUe,OAAaC,aAf3B,SAkBG,gBAAGb,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,aAAc/U,EAA/B,EAA+BA,OAAQ4V,EAAvC,EAAuCA,QAASC,EAAhD,EAAgDA,MAAhD,OACC,eAAC,KAAD,CAAMb,UAAU,gBAAgBJ,SAAUE,EAAcG,aAAa,MAArE,UACE,cAACpF,EAAA,EAAD,CACEzB,GAAG,KACHnC,QAAQ,0BACR8D,MAAM,OACNsC,UAAU,WAEZ,cAAC,GAAD,CAAa7H,KAAK,cAAc0K,YAAY,iBAC5C,cAAC,GAAD,CAAa1K,KAAK,WAAW0K,YAAY,cACzC,cAAC,GAAD,CAAa1K,KAAK,QAAQ0K,YAAY,UACtC,cAAC,GAAD,CAAa1K,KAAK,WAAW0K,YAAY,WAAWC,KAAK,aACzD,cAAC,KAAD,CACE3K,KAAK,QACL4K,OAAQ,kBAAM,cAAC,GAAD,CAAkBpV,OAAQA,EAAON,WAEjD,cAACmP,EAAA,EAAD,CACEqE,UAAW0C,IAAYC,GAASd,EAChCpQ,QAASoQ,EACTjG,UAAQ,EACR7C,QAAQ,WACRkJ,KAAK,SACL5E,OAAK,aCkBFzC,gBAvDE,WAAO,IAAD,EACaF,IAA1BpN,EADa,EACbA,UAAW0J,EADE,EACFA,WACnB,OACE,cAACgI,EAAA,EAAD,CAASlE,UAAQ,EAACqE,UAAU,SAAS5C,UAAQ,EAACuF,UAAU,WAAxD,SACE,eAAC9G,EAAA,EAAD,CAAWmB,MAAI,EAAf,UACE,eAACQ,EAAA,EAAD,CAAQzB,GAAG,KAAKJ,UAAQ,EAAxB,UACE,cAACgB,EAAA,EAAD,CACEU,KAAK,UACLjB,IAAI,mBACJC,IAAI,OACJoH,MAAO,CAAExD,aAAc,MAL3B,iBASC9R,EAAUuV,WACT,qCACE,cAAClG,EAAA,EAAD,CAAQzB,GAAG,KAAKJ,UAAQ,EAAC/B,QAAQ,4BACjC,cAAC4C,EAAA,EAAD,CAAQT,GAAIkB,IAAMhB,GAAG,cAAcoB,KAAK,OAAO1B,UAAQ,EAAvD,kCAKF,qCACE,cAACa,EAAA,EAAD,CACEW,QAAS,kBAAMtF,EAAW8B,UAAU,cAAC,GAAD,MACpC0D,KAAK,OACL1B,UAAQ,EAHV,mBAOA,cAACa,EAAA,EAAD,CACEW,QAAS,kBAAMtF,EAAW8B,UAAU,cAAC,GAAD,MACpC0D,KAAK,OACL1B,UAAQ,EAHV,sBAOA,cAACgI,GAAA,EAAD,CAAStE,YAAU,EAAC1D,UAAQ,EAA5B,gBAGA,cAACa,EAAA,EAAD,CACElK,QAASnE,EAAUqJ,UACnB6F,KAAK,OACL1B,UAAQ,EACR+B,MAAM,WACN9D,QAAQ,sBACRuD,QAAShP,EAAUqK,2B,UC3ClBoL,GAVU,SAAC,GAGZ,IAAD,IAFXjI,gBAEW,aADX/B,eACW,MADD,aACC,EACX,OACE,cAACiK,GAAA,EAAD,CAAQlG,QAAQ,EAAMhC,SAAUA,EAAhC,SACE,cAAC+F,EAAA,EAAD,CAAQ9H,QAASA,O,UCYRkK,GAfI,SAAClC,GAAkB,IAAD,EACbC,aAASD,EAAMzJ,MADF,mBAC5B2J,EAD4B,KACrBC,EADqB,KAEnC,OACE,eAACC,GAAA,EAAKC,MAAN,CAAY5U,MAAO0U,EAAKG,WAAaH,EAAK1U,MAA1C,UACE,gCAAQuU,EAAMO,QACd,oDAAcL,GAAWF,IACxBG,EAAKG,SAAWH,EAAK1U,MACpB,cAAC0S,GAAA,EAAD,CAAO3B,OAAK,EAACV,MAAM,MAAnB,SACGqE,EAAK1U,QAEN,S,UCYK0W,GAtBO,SAACnC,GAAkB,IAAD,EACPC,aAASD,EAAMzJ,MADR,mBAC/B2J,EAD+B,KACxBC,EADwB,KAClBiC,EADkB,KAEtC,OACE,eAAChC,GAAA,EAAKC,MAAN,CAAY5U,MAAO0U,EAAKG,WAAaH,EAAK1U,MAA1C,UACE,gCAAQuU,EAAMO,QACd,cAAC8B,GAAA,EAAD,CACEC,WAAS,EACTC,QAASvC,EAAMuC,QACftR,MAAOiP,EAAMjP,OAAS,KACtBgL,SAAU,SAACQ,EAAG+F,GAAJ,OAAUJ,EAAQK,SAASD,EAAEvR,QACvCyR,OAAQ,kBAAMN,EAAQO,YAAW,IACjC1B,YAAajB,EAAMiB,cAEpBd,EAAKG,SAAWH,EAAK1U,MACpB,cAAC0S,GAAA,EAAD,CAAO3B,OAAK,EAACV,MAAM,MAAnB,SACGqE,EAAK1U,QAEN,S,qBCJKmX,GAnBK,SAAC5C,GAA0C,IAAD,EAC7BC,aAASD,EAAMzJ,MADc,mBACrD2J,EADqD,KAC9CC,EAD8C,KACxCiC,EADwC,KAE5D,OACE,eAAChC,GAAA,EAAKC,MAAN,CAAY5U,MAAO0U,EAAKG,WAAaH,EAAK1U,MAA1C,UACE,cAAC,KAAD,uCACMyU,GACAF,GAFN,IAGE6C,SAAW3C,EAAMjP,OAAS,IAAImB,KAAK8N,EAAMjP,QAAW,KACpDgL,SAAU,SAAChL,GAAD,OAAWmR,EAAQK,SAASxR,OAEvCkP,EAAKG,SAAWH,EAAK1U,MACpB,cAAC0S,GAAA,EAAD,CAAO3B,OAAK,EAACV,MAAM,MAAnB,SACGqE,EAAK1U,QAEN,SCnBGqX,GAAkB,CAC7B,CAAE1H,KAAM,SAAUnK,MAAO,UACzB,CAAEmK,KAAM,UAAWnK,MAAO,WAC1B,CAAEmK,KAAM,OAAQnK,MAAO,QACvB,CAAEmK,KAAM,OAAQnK,MAAO,QACvB,CAAEmK,KAAM,QAASnK,MAAO,SACxB,CAAEmK,KAAM,SAAUnK,MAAO,WCWd8R,GAAe,WAC1B,IAAM9W,EAAU+W,eACR1N,EAAkBqE,IAAlBrE,cAENhD,EAIEgD,EAJFhD,eACAI,EAGE4C,EAHF5C,eACAhB,EAEE4D,EAFF5D,aACAf,EACE2E,EADF3E,eAEMjD,EAAOuV,eAAPvV,GATwB,EAWAwR,mBAA6B,IAAIxP,GAXjC,mBAWzB9B,EAXyB,KAWf2D,EAXe,KAa1B2R,EAAmBzB,KAAW,CAClC7R,MAAO6R,OAAaC,SAAS,mCAC7B5R,YAAa2R,OAAaC,SAAS,yCACnC7R,SAAU4R,OAAaC,WACvB3R,KAAM0R,OAAaC,SAAS,oBAAoByB,WAChDlT,MAAOwR,OAAaC,WACpB1R,KAAMyR,OAAaC,aAuBrB,OApBArC,qBAAU,WACJ3R,GAAIgE,EAAahE,GAAIV,MAAK,SAACY,GAAD,OAAc2D,EAAY,IAAI7B,EAAmB9B,SAC9E,CAACF,EAAIgE,IAkBJf,EAAuB,cAAC,GAAD,CAAkBqH,QAAQ,wBAGnD,eAACiG,EAAA,EAAD,CAASM,UAAQ,EAAjB,UACE,cAAC3C,EAAA,EAAD,CAAQ5D,QAAQ,mBAAmB2G,KAAG,EAAC7C,MAAM,SAC7C,cAAC,KAAD,CACE0F,iBAAkB0B,EAClBE,oBAAkB,EAClB5C,cAAe5S,EACf+S,SAAU,SAAC9M,GAAD,OAzBhB,SAA0BjG,GACxB,GAAKA,EAASF,GASZgF,EAAe9E,GAAUZ,MAAK,kBAC5Bf,EAAQC,KAAR,sBAA4B0B,EAASF,YAVvB,CAChB,IAAI8E,EAAW,2BACV5E,GADU,IAEbF,GAAI2V,iBAEN/Q,EAAeE,GAAaxF,MAAK,kBAC/Bf,EAAQC,KAAR,sBAA4BsG,EAAY9E,SAkBlB4V,CAAiBzP,IAJzC,SAMG,gBAAGgN,EAAH,EAAGA,aAAcc,EAAjB,EAAiBA,QAASb,EAA1B,EAA0BA,aAAcc,EAAxC,EAAwCA,MAAxC,OACC,eAAC,KAAD,CAAMb,UAAU,UAAUJ,SAAUE,EAAcG,aAAa,MAA/D,UACE,cAAC,GAAD,CAAazK,KAAK,QAAQ0K,YAAY,UACtC,cAAC,GAAD,CAAYsC,KAAM,EAAGtC,YAAY,cAAc1K,KAAK,gBACpD,cAAC,GAAD,CACEgM,QAASO,GACT7B,YAAY,WACZ1K,KAAK,aAEP,cAAC,GAAD,CACEiN,gBAAgB,OAChBjN,KAAK,OACLkN,gBAAc,EACdC,YAAY,OACZC,WAAW,yBAEb,cAAC/H,EAAA,EAAD,CAAQ5D,QAAQ,mBAAmB2G,KAAG,EAAC7C,MAAM,SAC7C,cAAC,GAAD,CAAamF,YAAY,OAAO1K,KAAK,SACrC,cAAC,GAAD,CAAa0K,YAAY,QAAQ1K,KAAK,UACtC,cAACqE,EAAA,EAAD,CACEqE,SAAU6B,IAAiBc,IAAUD,EACrCjR,QAASoQ,EACTtC,QAAQ,QACR3D,UAAQ,EACRqG,KAAK,SACLlJ,QAAQ,WAEV,cAAC4C,EAAA,EAAD,CACET,GAAIkB,IACJhB,GAAG,cACHmE,QAAQ,QACR0C,KAAK,SACLlJ,QAAQ,qB,IAQP6B,YAASkJ,I,kBCjGTlJ,gBAAS,YAAsD,IAAtBvB,EAAqB,EAArBA,WAC9CJ,EAAiByB,IAAjBzB,aAWR,OATAmH,qBAAU,WAIR,OAHI/G,GACFJ,EAAaG,oBAAoBC,GAE5B,WACLJ,EAAaoB,mBAEd,CAACpB,EAAcI,IAGhB,qCACE,cAAC2F,EAAA,EAAD,CACEG,UAAU,SACVvC,SAAS,MACT9B,UAAQ,EACR+B,MAAM,OACNpB,MAAO,CAAEkJ,OAAQ,QALnB,SAOE,cAAChI,EAAA,EAAD,sCAEF,eAACqC,EAAA,EAAD,CAASpC,UAAQ,EAAC0C,UAAQ,EAA1B,UACE,cAAC,KAAD,CACEoC,SAAU,SAAC9M,EAAD,OAAWgQ,EAAX,EAAWA,UAAX,OACR3L,EAAaqB,WAAW1F,GAAQ7G,MAAK,kBAAM6W,QAE7CrD,cAAe,CAAEvT,KAAM,IACvBuU,iBAAkBC,KAAW,CAC3BxU,KAAMwU,OAAaC,aANvB,SASG,gBAAGZ,EAAH,EAAGA,aAAca,EAAjB,EAAiBA,QAASd,EAA1B,EAA0BA,aAA1B,OACC,cAAC,KAAD,CAAME,UAAU,UAAhB,SACE,cAAC,KAAD,CAAOxK,KAAK,OAAZ,SACG,SAACyJ,GAAD,OACC,sBAAKtF,MAAO,CAAEI,SAAU,YAAxB,UACE,cAACgF,EAAA,EAAD,CAAQ/D,OAAQ+E,IAChB,kDACEG,YAAY,mEACZsC,KAAM,GACFvD,EAAME,OAHZ,IAIE4D,WAAY,SAACrH,GACG,UAAVA,EAAErQ,KAAmBqQ,EAAEsH,UAGb,UAAVtH,EAAErQ,KAAoBqQ,EAAEsH,WAC1BtH,EAAEC,iBACFiF,GAAWd,oBAU7B,cAACmD,GAAA,EAAQ9F,MAAT,UACGhG,EAAaC,SAASuF,KAAI,SAACzE,GAAD,OACzB,eAAC+K,GAAA,EAAD,WACE,cAACA,GAAA,EAAQC,OAAT,CAAgBzJ,IAAKvB,EAAQ7I,OAAS,qBACtC,eAAC4T,GAAA,EAAQ5H,QAAT,WACE,cAAC4H,GAAA,EAAQE,OAAT,CAAgB/J,GAAIkB,IAAMhB,GAAE,oBAAepB,EAAQzK,UAAnD,SACGyK,EAAQ9I,cAEX,cAAC6T,GAAA,EAAQG,SAAT,UACE,gCAAMC,aAAoBnL,EAAQC,UAAlC,YAEF,cAAC8K,GAAA,EAAQK,KAAT,CAAc3J,MAAO,CAAE4J,WAAY,YAAnC,SACGrL,EAAQhM,YAVDgM,EAAQvL,kBClE5B6W,GAAqB,CACzB1R,OAAQ,mBAGJ2R,GAAyB,CAC7B1J,SAAU,WACV2J,OAAQ,KACRC,KAAM,KACNhJ,MAAO,OACPiJ,OAAQ,OACR7I,MAAO,SAOMjC,gBAAS,YAAsD,IAAD,IAAnBjM,EAAmB,EAAnBA,SAAmB,EAGvE+L,IADFrE,cAAiB1C,EAFwD,EAExDA,iBAAkBlC,EAFsC,EAEtCA,QAASoC,EAF6B,EAE7BA,qBAE9C,OACE,eAACmL,EAAA,EAAQC,MAAT,WACE,eAACD,EAAA,EAAD,CAASzB,OAAK,EAACX,SAAS,MAAMnB,MAAO,CAAEkK,QAAS,KAAhD,UACGhX,EAASmF,aACR,cAACoL,GAAA,EAAD,CACEzD,MAAO,CAAEI,SAAU,WAAY+J,OAAQ,IAAMH,MAAO,GAAII,IAAK,IAC7DC,QAAM,EACNjJ,MAAM,MACN9D,QAAQ,cAGZ,cAAC+C,EAAA,EAAD,CACEP,IAAG,iCAA4B5M,EAASiC,SAArC,QACHyM,OAAK,EACL5B,MAAO6J,KAET,cAACtG,EAAA,EAAD,CAASvD,MAAO8J,GAAwBhI,OAAK,EAA7C,SACE,cAACtC,GAAA,EAAKgE,MAAN,UACE,cAAChE,GAAA,EAAD,UACE,eAACA,GAAA,EAAKkC,QAAN,WACE,cAACR,EAAA,EAAD,CACEH,KAAK,OACLzD,QAASpK,EAASgC,MAClB8K,MAAO,CAAEoB,MAAO,WAElB,4BAAIzH,YAAOzG,EAASmC,KAAO,yBAC3B,0CACY,IACV,iCACE,cAAC,IAAD,CAAMsK,GAAE,8BAAezM,EAASqE,YAAxB,aAAe,EAAezD,UAAtC,mBACGZ,EAASqE,YADZ,aACG,EAAe9B,+BAShC,cAAC8N,EAAA,EAAD,CAASM,UAAQ,EAAC1C,SAAS,SAA3B,SACGjO,EAASmE,OACR,qCACE,cAAC6I,EAAA,EAAD,CACEkB,MAAOlO,EAASmF,YAAc,QAAU,MACxCyL,QAAQ,OACRhC,OAAK,EACLxE,QACEpK,EAASmF,YACL,uBACA,kBAENwI,QAASzI,EACTpC,QAASA,IAEX,cAACkK,EAAA,EAAD,CACEqE,SAAUrR,EAASmF,YACnBoH,GAAIkB,IACJhB,GAAE,kBAAazM,EAASF,IACxBoO,MAAM,SACN0C,QAAQ,QALV,6BAUA5Q,EAASgE,QACX,cAACgJ,EAAA,EAAD,CAAQlK,QAASA,EAAS6K,QAAS3I,EAAnC,+BAIA,cAACgI,EAAA,EAAD,CACEqE,SAAUrR,EAASmF,YACnBrC,QAASA,EACT6K,QAAS3I,EACTkJ,MAAM,OAJR,mCCxFKjC,gBAAS,YAAoD,IAApBjM,EAAmB,EAAnBA,SACtD,OACE,eAACqQ,EAAA,EAAQC,MAAT,WACE,cAACD,EAAA,EAAD,CAASpC,SAAS,MAAlB,SACE,eAACyD,EAAA,EAAD,WACE,cAACA,EAAA,EAAKC,OAAN,CAAa7D,MAAO,EAApB,SACE,cAAC0B,GAAA,EAAD,CAAM3B,KAAK,QAAQK,MAAM,OAAOvF,KAAK,WAEvC,cAAC+I,EAAA,EAAKC,OAAN,CAAa7D,MAAO,GAApB,SACE,4BAAI9N,EAASkC,qBAInB,cAACmO,EAAA,EAAD,CAASpC,UAAQ,EAAjB,SACE,eAACyD,EAAA,EAAD,CAAM0F,cAAc,SAApB,UACE,cAAC1F,EAAA,EAAKC,OAAN,CAAa7D,MAAO,EAApB,SACE,cAAC0B,GAAA,EAAD,CAAM7G,KAAK,WAAWkF,KAAK,QAAQK,MAAM,WAE3C,cAACwD,EAAA,EAAKC,OAAN,CAAa7D,MAAO,GAApB,SACE,+BAAOrH,YAAOzG,EAASmC,KAAO,gCAIpC,cAACkO,EAAA,EAAD,CAASpC,UAAQ,EAAjB,SACE,eAACyD,EAAA,EAAD,CAAM0F,cAAc,SAApB,UACE,cAAC1F,EAAA,EAAKC,OAAN,CAAa7D,MAAO,EAApB,SACE,cAAC0B,GAAA,EAAD,CAAM7G,KAAK,SAASkF,KAAK,QAAQK,MAAM,WAEzC,cAACwD,EAAA,EAAKC,OAAN,CAAa7D,MAAO,GAApB,SACE,iCACG9N,EAASqC,MADZ,KACqBrC,EAASoC,qBC9B3B6J,gBAAS,YAEb,IAAD,IADRjM,SAAYiE,EACJ,EADIA,UAAWI,EACf,EADeA,KAEvB,OAAKJ,EAEH,qCACE,eAACoM,EAAA,EAAD,CACEG,UAAU,SACV1D,MAAO,CAAEkJ,OAAQ,QACjB/H,SAAS,MACTyC,WAAS,EACTvE,UAAQ,EACR+B,MAAM,OANR,UAQGjK,EAAUkL,OARb,IAQ2C,IAArBlL,EAAUkL,OAAe,SAAW,SAR1D,YAUA,cAACkB,EAAA,EAAD,CAASpC,UAAQ,EAAjB,SACE,cAAC2B,GAAA,EAAD,CAAMyH,SAAO,EAACC,SAAO,EAArB,SACGrT,EAAU6L,KAAI,SAACnL,GAAD,OACb,eAAC2H,GAAA,EAAD,CAAMQ,MAAO,CAAEI,SAAU,YAAzB,UACGvI,EAAS/D,YAAT,OAAsByD,QAAtB,IAAsBA,OAAtB,EAAsBA,EAAMzD,WAC3B,cAAC2P,GAAA,EAAD,CACEzD,MAAO,CAAEI,SAAU,YACnBgB,MAAM,SACNiJ,OAAO,QAHT,kBAQF,cAAChK,EAAA,EAAD,CAAOU,KAAK,OAAOjB,IAAKjI,EAASnC,OAAS,qBAC1C,eAAC8J,GAAA,EAAKkC,QAAN,CAAc4I,cAAc,SAA5B,UACE,cAAC9K,GAAA,EAAK0B,OAAN,CAAazB,GAAG,KAAhB,SACE,cAAC,IAAD,CAAME,GAAE,oBAAe9H,EAAS/D,UAAhC,SACG+D,EAASpC,gBAGboC,EAASW,WACR,cAACgH,GAAA,EAAKiL,MAAN,CAAYzK,MAAO,CAAEoB,MAAO,UAA5B,4BAlBsCvJ,EAAS/D,oBAhBxC,QC6BVqL,gBA/BS,WAAO,IACrBvE,EAAkBqE,IAAlBrE,cAEY1H,EAIhB0H,EAJF9E,iBACAkB,EAGE4D,EAHF5D,aACAf,EAEE2E,EAFF3E,eACAqC,EACEsC,EADFtC,sBAEMtF,EAAOuV,eAAPvV,GAOR,OALA2R,qBAAU,WAER,OADI3R,GAAIgE,EAAahE,GACd,kBAAMsF,OACZ,CAACtF,EAAIgE,EAAcsB,IAElBrC,IAAmB/C,EAAiB,cAAC,GAAD,IAGtC,eAAC0R,EAAA,EAAD,WACE,eAACA,EAAA,EAAKC,OAAN,CAAa7D,MAAO,GAApB,UACE,cAAC,GAAD,CAAwB9N,SAAUA,IAClC,cAAC,GAAD,CAAsBA,SAAUA,IAChC,cAAC,GAAD,CAAsB0K,WAAY1K,EAASF,QAE7C,cAAC4R,EAAA,EAAKC,OAAN,CAAa7D,MAAO,EAApB,SACE,cAAC,GAAD,CAAyB9N,SAAUA,YC/B5B,SAASwX,KACtB,IADmC,EAEPlG,mBAAS,MAFF,mBAE5BnT,EAF4B,KAEpB6U,EAFoB,KAoCnC,OACE,qCACE,cAAChF,EAAA,EAAD,CAAQzB,GAAG,KAAKnC,QAAQ,yBACxB,cAACiG,EAAA,EAAD,UACE,eAACrD,EAAA,EAAOsD,MAAR,CAAcmH,OAAO,IAArB,UACE,cAACzK,EAAA,EAAD,CAAQW,QArChB,WACE/Q,IACGuC,IAAIuY,uBACJxO,OAAM,SAACwK,GAAD,OAAS3V,QAAQC,IAAI0V,EAAIjW,cAkCK2M,QAAQ,YAAYwE,OAAK,EAAC+I,SAAO,IAClE,cAAC3K,EAAA,EAAD,CACEW,QAjCV,WACE/Q,IACGuC,IAAIuY,yBACJxO,OAAM,SAACwK,GAAD,OAAS3V,QAAQC,IAAI0V,EAAIjW,cA+B1B2M,QAAQ,cACRwE,OAAK,EACL+I,SAAO,IAET,cAAC3K,EAAA,EAAD,CACEW,QAjBV,WACE/Q,IAAM0C,KAAKoY,iBAAwB,IAAIxO,OAAM,SAACwK,GAAD,OAASV,EAAUU,OAiBxDtJ,QAAQ,mBACRwE,OAAK,EACL+I,SAAO,IAET,cAAC3K,EAAA,EAAD,CACEW,QAvCV,WACE/Q,IACGuC,IAAIuY,0BACJxO,OAAM,SAACwK,GAAD,OAAS3V,QAAQC,IAAI0V,EAAIjW,cAqC1B2M,QAAQ,eACRwE,OAAK,EACL+I,SAAO,IAET,cAAC3K,EAAA,EAAD,CACEW,QAvCV,WACE/Q,IACGuC,IAAIuY,0BACJxO,OAAM,SAACwK,GAAD,OAAS3V,QAAQC,IAAI0V,EAAIjW,cAqC1B2M,QAAQ,eACRwE,OAAK,EACL+I,SAAO,IAET,cAAC3K,EAAA,EAAD,CAAQW,QAtChB,WACE/Q,IAAMuC,IAAIuY,2BAAiCxO,OAAM,SAACwK,GAAD,OAAS3V,QAAQC,IAAI0V,OAqChCtJ,QAAQ,WAAWwE,OAAK,EAAC+I,SAAO,SAGnExZ,GAAU,cAAC,GAAD,CAAkBA,OAAQA,OCtEpC,IAAMyZ,GAAW,WACtB,OACE,eAACvH,EAAA,EAAD,CAASgD,aAAW,EAApB,UACE,eAACrF,EAAA,EAAD,CAAQN,MAAI,EAAZ,UACE,cAAC8B,GAAA,EAAD,CAAM7G,KAAK,WADb,6DAIA,cAAC0H,EAAA,EAAQwH,OAAT,UACE,cAAC7K,EAAA,EAAD,CAAQT,GAAIkB,IAAMhB,GAAG,cAAckL,SAAO,EAA1C,6CCQO1L,gBAfK,WAAO,IAAD,IAChB3O,EAAgByO,IAAhBzO,YACR,OACE,eAAC+O,EAAA,EAAD,WACE,cAAC2B,EAAA,EAAD,CAAQzB,GAAG,KAAKnC,QAAQ,iBACxB,cAAC4D,EAAA,EAAD,CAAQ+C,KAAG,EAACxE,GAAG,KAAK2B,MAAM,MAAM9D,QAAO,UAAE9M,EAAYO,aAAd,aAAE,EAAmBia,WAC3D,UAAAxa,EAAYO,aAAZ,eAAmBgC,UAClB,eAACwQ,EAAA,EAAD,WACE,cAACrC,EAAA,EAAD,CAAQzB,GAAG,KAAKnC,QAAQ,cAAc8D,MAAM,SAC5C,sBAAMpB,MAAO,CAAEiB,UAAW,QAA1B,SAAqCzQ,EAAYO,MAAMgC,mB,UCGlDoM,gBAbQ,WAAO,IACpB5D,EAAe0D,IAAf1D,WACR,OACE,cAAC0P,GAAA,EAAD,CACE7N,KAAM7B,EAAW4B,MAAMC,KACvB8N,QAAS3P,EAAWC,WACpBuF,KAAK,OAHP,SAKE,cAACkK,GAAA,EAAMvJ,QAAP,UAAgBnG,EAAW4B,MAAM5K,Y,UCmCxB4M,gBAlCS,SAAC,GAA4B,IAA1BgM,EAAyB,EAAzBA,YAAyB,EAG9ClM,IADF1B,aAAgBhJ,EAFgC,EAEhCA,QAASD,EAFuB,EAEvBA,cAE3B,OACE,cAAC,KAAD,CACEwR,cAAe,CAAErQ,YAAW,OAAElB,QAAF,IAAEA,OAAF,EAAEA,EAASkB,YAAa+M,IAAG,OAAEjO,QAAF,IAAEA,OAAF,EAAEA,EAASiO,KAClEyD,SAAU,SAAC9M,GACT7E,EAAc6E,GAAQ7G,MAAK,WACzB6Y,GAAY,OAGhBrE,iBAAkBC,KAAW,CAC3BtR,YAAasR,OAAaC,aAR9B,SAWG,gBAAGZ,EAAH,EAAGA,aAAca,EAAjB,EAAiBA,QAASC,EAA1B,EAA0BA,MAA1B,OACC,eAAC,KAAD,CAAMb,UAAU,UAAhB,UACE,cAAC,GAAD,CAAaE,YAAY,eAAe1K,KAAK,gBAC7C,cAAC,GAAD,CAAYgN,KAAM,EAAGtC,YAAY,eAAe1K,KAAK,QACrD,cAACqE,EAAA,EAAD,CACEC,UAAQ,EACRqG,KAAK,SACLxQ,QAASoQ,EACT9I,QAAQ,iBACRwG,QAAQ,QACRS,UAAW0C,IAAYC,aCApB/H,gBAjCM,WAAO,IAClB5B,EAAiB0B,IAAjB1B,aACA6N,EAA2B7N,EAA3B6N,cAAe7W,EAAYgJ,EAAZhJ,QAFE,EAGOiQ,oBAAS,GAHhB,mBAGlBzO,EAHkB,KAGRoV,EAHQ,KAIzB,OACE,cAACE,GAAA,EAAIC,KAAL,UACE,eAAC1G,EAAA,EAAD,WACE,eAACA,EAAA,EAAKC,OAAN,CAAa7D,MAAM,KAAnB,UACE,cAACE,EAAA,EAAD,CACE4C,QAAQ,OACRlD,KAAK,OACLtD,QAAO,uBAAW/I,QAAX,IAAWA,OAAX,EAAWA,EAASkB,eAE5B2V,GACC,cAAClL,EAAA,EAAD,CACE4D,QAAQ,QACRhC,OAAK,EACLxE,QAASvH,EAAW,SAAW,eAC/B8K,QAAS,kBAAMsK,GAAapV,SAIlC,cAAC6O,EAAA,EAAKC,OAAN,CAAa7D,MAAM,KAAnB,SACGjL,EACC,cAAC,GAAD,CAAiBoV,YAAaA,IAE9B,sBAAMnL,MAAO,CAAE4J,WAAY,YAA3B,gBAA0CrV,QAA1C,IAA0CA,OAA1C,EAA0CA,EAASiO,gBCxBzD+I,GAAQ,CACZ,CAAEC,SAAU,gBAAiBC,KAAM,CAAE/Z,IAAK,WAC1C,CAAE8Z,SAAU,cAAeC,KAAM,CAAE/Z,IAAK,SACxC,CAAE8Z,SAAU,UAAWC,KAAM,CAAE/Z,IAAK,aAyDvByN,gBAtDW,WAAO,IACvB5B,EAAiB0B,IAAjB1B,aACAxC,EACNwC,EADMxC,mBAAoBxG,EAC1BgJ,EAD0BhJ,QAAS4F,EACnCoD,EADmCpD,kBAAmBD,EACtDqD,EADsDrD,eAGxDyK,qBAAU,WACR5J,EAAmBxG,EAAST,YAC3B,CAACiH,EAAoBxG,IAQxB,OACE,cAAC8W,GAAA,EAAIC,KAAL,CAAUtV,QAASmE,EAAnB,SACE,eAACyK,EAAA,EAAD,WACE,cAACA,EAAA,EAAKC,OAAN,CAAa7D,MAAO,GAApB,SACE,cAACE,EAAA,EAAD,CAAQ4C,QAAQ,OAAOlD,KAAK,WAAWtD,QAAS,iBAElD,eAACsH,EAAA,EAAKC,OAAN,CAAa7D,MAAO,GAApB,UACE,cAACqK,GAAA,EAAD,CACEE,MAAOA,GACPG,KAAM,CAAE9H,WAAW,EAAMnD,UAAU,GACnCkL,YAAa,SAAC5J,EAAGvS,GAAJ,OAhBC,SAACuS,EAAmBvS,GAC1CuL,EACExG,EAAST,SACTyX,GAAM/b,EAAKoc,aAAuBH,KAAK/Z,KAaPma,CAAgB9J,EAAGvS,MAE/C,uBACA,cAAC0S,GAAA,EAAKsB,MAAN,CAAYsI,YAAa,EAAzB,SACG5R,EAAe8I,KAAI,SAAC9P,GAAD,OAClB,eAACgP,GAAA,EAAD,CACEzC,GAAIkB,IACJhB,GAAE,sBAAiBzM,EAASF,IAF9B,UAKE,cAACqN,EAAA,EAAD,CACEP,IAAG,iCAA4B5M,EAASiC,SAArC,QACH6K,MAAO,CAAEoE,UAAW,IAAK2H,UAAW,WAEtC,eAAC7J,GAAA,EAAKR,QAAN,WACE,cAACQ,GAAA,EAAKhB,OAAN,CAAawC,UAAU,SAAvB,SAAiCxQ,EAASgC,QAC1C,eAACgN,GAAA,EAAK8J,KAAN,CAAWtI,UAAU,SAArB,UACE,8BAAM/J,YAAO,IAAIjC,KAAKxE,EAASmC,MAAO,YACtC,8BAAMsE,YAAO,IAAIjC,KAAKxE,EAASmC,MAAO,oBAVrCnC,EAASF,oBCbfmM,gBA7BW,WAAO,IACvB5B,EAAiB0B,IAAjB1B,aACAhJ,EAAsDgJ,EAAtDhJ,QAASwF,EAA6CwD,EAA7CxD,WAAYC,EAAiCuD,EAAjCvD,kBAAmBC,EAAcsD,EAAdtD,UAEhD,OACE,cAACoR,GAAA,EAAIC,KAAL,CAAUtV,QAASgE,EAAnB,SACE,eAAC4K,EAAA,EAAD,WACE,cAACA,EAAA,EAAKC,OAAN,CAAa7D,MAAO,GAApB,SACE,cAACE,EAAA,EAAD,CACE4C,QAAQ,OACRlD,KAAK,OACLtD,QACgB,IAAdrD,EAAA,kCACwB1F,QADxB,IACwBA,OADxB,EACwBA,EAASkB,aADjC,wBAEclB,QAFd,IAEcA,OAFd,EAEcA,EAASkB,YAFvB,qBAMN,cAACmP,EAAA,EAAKC,OAAN,CAAa7D,MAAO,GAApB,SACE,cAACkB,GAAA,EAAKsB,MAAN,CAAYsI,YAAa,EAAzB,SACG/R,EAAWiJ,KAAI,SAACzO,GAAD,OACd,cAAC,GAAD,CAAoCA,QAASA,GAA3BA,EAAQT,yB,UCDzBmY,I,OAhBY,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,aAAcC,EAAwB,EAAxBA,WAC1C,OACE,cAAC,KAAD,CACErM,IAAKoM,EACLlM,MAAO,CAAEiK,OAAQ,IAAKjJ,MAAO,QAC7BoL,mBAAoB,EACpBC,YAAa,EACbC,QAAQ,eACRC,QAAQ,EACRC,SAAU,EACVC,aAAc,EACdC,YAAY,EACZC,cAAe,SAACC,GAAD,OAAaT,EAAWS,Q,UC2B9BC,GAxCa,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,SACvBC,EAAW,CACf7D,OAAQ,kBACRtG,YAAa,OACboK,aAAc,MACdC,WAAY,OACZvJ,UAAW,SACXuG,OAAQ,KAOJiD,EAASC,uBACb,SAACC,GACCN,EACEM,EAAcpK,KAAI,SAAChP,GAAD,OAChBc,OAAOC,OAAOf,EAAM,CAClBsY,QAASe,IAAIC,gBAAgBtZ,WAKrC,CAAC8Y,IAxBgD,EA0BGS,aAAY,CAAEL,WAA5DM,EA1B2C,EA0B3CA,aAAcC,EA1B6B,EA0B7BA,cAAeC,EA1Bc,EA0BdA,aAErC,OACE,gDACMF,KADN,IAEExN,MAAO0N,EAAY,2BAAQX,GArBd,CACfnK,YAAa,UAoB0CmK,EAFvD,UAIE,qCAAWU,MACX,cAAC/K,GAAA,EAAD,CAAM7G,KAAK,SAASkF,KAAK,SACzB,cAACG,EAAA,EAAD,CAAQ5D,QAAQ,yBC6BPqQ,GA9DW,SAAC,GAAqC,IAAnC3X,EAAkC,EAAlCA,QAASjC,EAAyB,EAAzBA,YAAyB,EACnCyQ,mBAAc,IADqB,mBACtDoJ,EADsD,KAC/Cd,EAD+C,OAE/BtI,qBAF+B,mBAEtDoI,EAFsD,KAE7CT,EAF6C,KAgB7D,OANAxH,qBAAU,WACR,OAAO,WACLiJ,EAAMnX,SAAQ,SAACzC,GAAD,OAAeqZ,IAAIQ,gBAAgB7Z,EAAKsY,eAEvD,CAACsB,IAGF,eAAChJ,EAAA,EAAD,WACE,eAACA,EAAA,EAAKC,OAAN,CAAa7D,MAAO,EAApB,UACE,cAACE,EAAA,EAAD,CAAQ+C,KAAG,EAAC7C,MAAM,OAAO9D,QAAQ,uBACjC,cAAC,GAAD,CAAqBwP,SAAUA,OAEjC,cAAClI,EAAA,EAAKC,OAAN,CAAa7D,MAAO,IACpB,eAAC4D,EAAA,EAAKC,OAAN,CAAa7D,MAAO,EAApB,UACE,cAACE,EAAA,EAAD,CAAQ+C,KAAG,EAAC7C,MAAM,OAAO9D,QAAQ,0BAChCsQ,GAASA,EAAMvL,OAAS,GACvB,cAAC,GAAD,CACE8J,WAAYA,EACZD,aAAc0B,EAAM,GAAGtB,aAI7B,cAAC1H,EAAA,EAAKC,OAAN,CAAa7D,MAAO,IACpB,eAAC4D,EAAA,EAAKC,OAAN,CAAa7D,MAAO,EAApB,UACE,cAACE,EAAA,EAAD,CAAQ+C,KAAG,EAAC7C,MAAM,OAAO9D,QAAQ,8BAChCsQ,GAASA,EAAMvL,OAAS,GACvB,qCACE,qBACEgE,UAAU,cACVrG,MAAO,CAAEoE,UAAW,IAAK0J,SAAU,YAErC,eAAC5N,EAAA,EAAOsD,MAAR,CAAcmH,OAAQ,EAAtB,UACE,cAACzK,EAAA,EAAD,CACEqE,SAAUvO,EACVA,QAASA,EACT6K,QAzCd,WACM+L,IACK,OAAPA,QAAO,IAAPA,KAASmB,mBAAmBC,QAAO,SAACC,GAAD,OAAUla,EAAYka,QAwC/C9N,UAAQ,EACRS,KAAK,UAEP,cAACV,EAAA,EAAD,CACEqE,SAAUvO,EACV6K,QAAS,kBAAMiM,EAAS,KACxBlM,KAAK,uBCwCNzB,gBA3FO,SAAC,GAAwB,IAAD,EAArB5K,EAAqB,EAArBA,QAAqB,EAUxC0K,IARF1B,aACE6N,EAHwC,EAGxCA,cACArX,EAJwC,EAIxCA,YACA+F,EALwC,EAKxCA,UACA9D,EANwC,EAMxCA,QACA5B,EAPwC,EAOxCA,aACAC,EARwC,EAQxCA,YARwC,EAWJmQ,oBAAS,GAXL,mBAWrC0J,EAXqC,KAWvBC,EAXuB,OAYhB3J,mBAAS,IAZO,mBAYrC4J,EAZqC,KAY7BC,EAZ6B,KAkC5C,OACE,cAAChD,GAAA,EAAIC,KAAL,UACE,eAAC1G,EAAA,EAAD,WACE,eAACA,EAAA,EAAKC,OAAN,CAAa7D,MAAO,GAApB,UACE,cAACE,EAAA,EAAD,CAAQ4C,QAAQ,OAAOlD,KAAK,QAAQtD,QAAQ,WAC3C8N,GACC,cAAClL,EAAA,EAAD,CACE4D,QAAQ,QACRhC,OAAK,EACLxE,QAAS4Q,EAAe,SAAW,YACnCrN,QAAS,kBAAMsN,GAAiBD,SAItC,cAACtJ,EAAA,EAAKC,OAAN,CAAa7D,MAAO,GAApB,SACGkN,EACC,cAAC,GAAD,CACEna,YArCZ,SAA2BC,GACzBD,EAAYC,GAAM1B,MAAK,kBAAM6b,GAAgB,OAqCnCnY,QAAS8D,IAGX,cAACoI,GAAA,EAAKsB,MAAN,CAAYsI,YAAa,EAAzB,mBACGvX,EAAQgG,cADX,aACG,EAAgByI,KAAI,SAAC1I,GAAD,OACnB,eAAC4H,GAAA,EAAD,WACE,cAAC7B,EAAA,EAAD,CAAOP,IAAKxF,EAAMlI,MACjBgZ,GACC,eAAClL,EAAA,EAAOsD,MAAR,CAAc5B,OAAK,EAAC+I,OAAQ,EAA5B,UACE,cAACzK,EAAA,EAAD,CACE4B,OAAK,EACLV,MAAM,QACN9D,QAAQ,OACRzB,KAAM,OAASvB,EAAMtH,GACrBuR,SAAUjK,EAAME,QAAUxE,EAC1BA,QAASoY,IAAW,OAAS9T,EAAMtH,IAAMgD,EACzC6K,QAAS,SAACkB,GAAD,OAlD/B,SACEzH,EACAyH,GAEAsM,EAAUtM,EAAEuM,cAAczS,MAC1BzH,EAAakG,GA6CuBiU,CAAmBjU,EAAOyH,MAE5C,cAAC7B,EAAA,EAAD,CACE4B,OAAK,EACLV,MAAM,MACNR,KAAK,QACL5K,QAASoY,IAAW9T,EAAMtH,IAAMgD,EAChC6K,QAAS,SAACkB,GAAD,OAjD/B,SACEzH,EACAyH,GAEAsM,EAAUtM,EAAEuM,cAAczS,MAC1BxH,EAAYiG,GA4CwBkU,CAAkBlU,EAAOyH,IACzCwC,SAAUjK,EAAME,OAChBqB,KAAMvB,EAAMtH,UApBTsH,EAAMtH,mBC5BlBmM,gBA1BQ,SAAC,GAAwB,IAAtB5K,EAAqB,EAArBA,QAChBgJ,EAAiB0B,IAAjB1B,aACFgO,EAAQ,CACZ,CAAEC,SAAU,QAAS/E,OAAQ,kBAAM,cAAC,GAAD,MACnC,CAAE+E,SAAU,SAAU/E,OAAQ,kBAAM,cAAC,GAAD,CAAelS,QAASA,MAC5D,CAAEiX,SAAU,SAAU/E,OAAQ,kBAAM,cAAC,GAAD,MACpC,CACE+E,SAAU,YACV/E,OAAQ,kBAAM,cAAC,GAAD,MAEhB,CACE+E,SAAU,YACV/E,OAAQ,kBAAM,cAAC,GAAD,OAIlB,OACE,cAAC4E,GAAA,EAAD,CACEK,KAAM,CAAE9J,OAAO,EAAMd,UAAU,GAC/B2N,aAAa,QACblD,MAAOA,EACPI,YAAa,SAAC5J,EAAGvS,GAAJ,OAAa+N,EAAanD,aAAa5K,EAAKoc,mB,UCYhDzM,gBA9BO,SAAC,GAAwB,IAAtB5K,EAAqB,EAArBA,QACvB,OACE,cAACgP,EAAA,EAAD,UACE,eAACqB,EAAA,EAAD,WACE,cAACA,EAAA,EAAKC,OAAN,CAAa7D,MAAO,GAApB,SACE,cAACxB,GAAA,EAAKgE,MAAN,UACE,eAAChE,GAAA,EAAD,WACE,cAACA,GAAA,EAAKa,MAAN,CACEC,QAAM,EACNS,KAAK,QACLjB,IAAKvL,EAAQmB,OAAS,qBAExB,cAAC8J,GAAA,EAAKkC,QAAN,CAAc4I,cAAc,SAA5B,SACE,cAACpJ,EAAA,EAAD,CAAQzB,GAAG,KAAKnC,QAAS/I,EAAQkB,uBAKzC,eAACmP,EAAA,EAAKC,OAAN,CAAa7D,MAAO,EAApB,UACE,eAAC0N,GAAA,EAAUlL,MAAX,CAAiBmH,OAAQ,EAAzB,UACE,cAAC+D,GAAA,EAAD,CAAW7I,MAAM,WAAWtP,MAAOhC,EAAQkE,iBAC3C,cAACiW,GAAA,EAAD,CAAW7I,MAAM,YAAYtP,MAAOhC,EAAQsG,oBAE9C,cAACwM,GAAA,EAAD,IACA,cAAC,GAAD,CAAc9S,QAASA,eCJlB4K,gBA5BK,WAAO,IACjBrL,EAAayU,eAAbzU,SACAyJ,EAAiB0B,IAAjB1B,aACA1D,EAAuD0D,EAAvD1D,eAAgBQ,EAAuCkD,EAAvClD,YAAa9F,EAA0BgJ,EAA1BhJ,QAAS6F,EAAiBmD,EAAjBnD,aAS9C,OAPAuK,qBAAU,WAER,OADAtK,EAAYvG,GACL,WACLsG,EAAa,MAEd,CAACC,EAAavG,EAAUsG,IAEvBP,EAAuB,cAAC,GAAD,CAAkByD,QAAQ,uBAGnD,cAACsH,EAAA,EAAD,UACE,cAACA,EAAA,EAAKC,OAAN,CAAa7D,MAAO,GAApB,SACGzM,GACC,qCACE,cAAC,GAAD,CAAeA,QAASA,IACxB,cAAC,GAAD,CAAgBA,QAASA,c,UCftB,SAASoa,GAAT,GAAiE,IAA9BC,EAA6B,EAAxCC,UAAyBC,EAAe,8BAE9D1H,EACXnI,IADFpN,UAAauV,WAGf,OACE,cAAC,KAAD,2BACM0H,GADN,IAEErI,OAAQ,SAACnB,GAAD,OACN8B,EAAa,cAACwH,EAAD,eAAetJ,IAAY,cAAC,KAAD,CAAU3F,GAAG,UCqD9CR,oBAzDf,WACE,IAAM4P,EAAWC,eADJ,EAEsB/P,IAA3BzO,EAFK,EAELA,YAAaqB,EAFR,EAEQA,UAUrB,OARA8S,qBAAU,WACJnU,EAAYF,MACduB,EAAU+J,UAAUqT,SAAQ,kBAAMze,EAAYyM,kBAE9CpL,EAAUiK,yBAAyBxJ,MAAK,kBAAM9B,EAAYyM,oBAE3D,CAACzM,EAAaqB,IAEZrB,EAAYwM,UAIf,qCACE,cAAC,IAAD,CAAgBoD,SAAS,eAAe8O,iBAAe,IACvD,cAAC,GAAD,IACA,cAAC,KAAD,CAAOtP,OAAK,EAACuP,KAAK,IAAIN,UAAWO,KACjC,cAAC,KAAD,CACED,KAAM,QACN1I,OAAQ,kBACN,qCACE,cAAC,EAAD,IACA,cAAClH,EAAA,EAAD,CAAWS,MAAO,CAAEiB,UAAW,OAA/B,SACE,eAAC,KAAD,WACE,cAAC0N,GAAD,CACE/O,OAAK,EACLuP,KAAK,cACLN,UAAWQ,KAEb,cAACV,GAAD,CACEQ,KAAK,kBACLN,UAAWS,KAEb,cAACX,GAAD,CAEEQ,KAAM,CAAC,kBAAmB,eAC1BN,UAAWxG,IAFN0G,EAASrd,KAIhB,cAACid,GAAD,CACEQ,KAAK,sBACLN,UAAWU,KAEb,cAAC,KAAD,CAAOJ,KAAK,UAAUN,UAAWnE,KACjC,cAAC,KAAD,CAAOyE,KAAK,gBAAgBN,UAAWW,KACvC,cAAC,KAAD,CAAOX,UAAW/D,mBAlCvB,cAAC,GAAD,CAAkBxN,QAAQ,sBClBtBmS,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBrd,MAAK,YAAkD,IAA/Csd,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,SCNC,SAASO,KAAe,IAC7BC,EAAalB,eAAbkB,SAMR,OAJAvL,qBAAU,WACRlJ,OAAO0U,SAAS,EAAG,KAClB,CAACD,IAEG,KCIF,IAAM3e,GAAU6e,eAEvBC,IAAS5J,OACP,cAAC1H,EAAauR,SAAd,CAAuB/Z,MAAOhG,EAA9B,SACE,eAAC,KAAD,CAAQgB,QAASA,GAAjB,UACE,cAAC0e,GAAD,IACA,cAAC,GAAD,SAGJM,SAASC,eAAe,SAM1Bf,O","file":"static/js/main.68a82411.chunk.js","sourcesContent":["\nexport interface Pagination {\n    currentPage: number;\n    itemsPerPage: number;\n    totalItems: number;\n    totalPages: number;\n}\n\nexport class PaginatedResult<T> {\n    data: T;\n    pagination: Pagination;\n\n    constructor(data: T, pagination: Pagination) {\n        this.data = data;\n        this.pagination = pagination;\n    }\n}\n\nexport class PagingParams {\n    pageNumber;\n    pageSize;\n\n    constructor(pageNumber = 1, pageSize = 2) {\n        this.pageNumber = pageNumber;\n        this.pageSize = pageSize;\n    }\n}","import axios, { AxiosError, AxiosResponse } from 'axios';\nimport { toast } from 'react-toastify';\nimport { history } from '../..';\nimport { Activity, ActivityFormValues } from '../models/activity';\nimport { PaginatedResult } from '../models/pagination';\nimport { Photo, Profile, UserActivity } from '../models/profile';\nimport { User, UserFormValues } from '../models/user';\nimport { store } from '../stores/store';\n\nconst sleep = (delay: number) => {\n    return new Promise((resolve) => {\n        setTimeout(resolve, delay)\n    })\n}\n\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\n\naxios.interceptors.request.use(config => {\n    const token = store.commonStore.token;\n    if (token) config.headers.Authorization = `Bearer ${token}`\n    return config\n})\n\naxios.interceptors.response.use(async response => {\n    if (process.env.NODE_ENV === 'development') await sleep(1000);\n\n    const pagination = response.headers[\"pagination\"];\n    if (pagination) {\n        response.data = new PaginatedResult(response.data, JSON.parse(pagination));\n        return response as AxiosResponse<PaginatedResult<any>>\n    }\n    return response;\n}, (error: AxiosError) => {\n    const { data, status, config, headers } = error.response!;\n    console.log(error.response);\n\n    switch (status) {\n        case 400:\n            if (typeof data === 'string') {\n                toast.error(data);\n            }\n            if (config.method === 'get' && data.errors.hasOwnProperty('id')) {\n                history.push('not-found');\n            }\n            if (data.errors) {\n                const modalStateErrors = [];\n                for (const key in data.errors) {\n                    if (data.errors[key]) {\n                        modalStateErrors.push(data.errors[key])\n                    }\n                }\n                throw modalStateErrors.flat();\n            }\n            break;\n        case 401:\n            if (status === 401 && headers['www-authenticate'].startsWith('Bearer error=\"invalid_toke\"')) {\n                store.userStore.logout();\n                toast.error('Session expired - please login again');\n            }\n            break;\n        case 404:\n            history.push('/not-found');\n            break;\n        case 500:\n            store.commonStore.setServerError(data);\n            history.push('server-error');\n            break;\n    }\n    return Promise.reject(error);\n})\n\nconst responseBody = <T>(response: AxiosResponse<T>) => response.data;\n\nconst requests = {\n    get: <T>(url: string) => axios.get<T>(url).then(responseBody),\n    post: <T>(url: string, body: {}) => axios.post<T>(url, body).then(responseBody),\n    put: <T>(url: string, body: {}) => axios.put<T>(url, body).then(responseBody),\n    delete: <T>(url: string) => axios.delete<T>(url).then(responseBody),\n}\n\nconst Activities = {\n    list: (params: URLSearchParams) => axios.get<PaginatedResult<Activity[]>>('/activities', { params }).then(responseBody),\n    details: (id: string) => requests.get<Activity>(`/activities/${id}`),\n    create: (activity: ActivityFormValues) => requests.post<void>('/activities', activity),\n    update: (activity: ActivityFormValues) => requests.put<void>(`/activities/${activity.id}`, activity),\n    delete: (id: string) => requests.delete<void>(`/activities/${id}`),\n    attend: (id: string) => requests.post<void>(`/activities/${id}/attend`, {})\n}\n\nconst Account = {\n    current: () => requests.get<User>('/account'),\n    login: (user: UserFormValues) => requests.post<User>('/account/login', user),\n    register: (user: UserFormValues) => requests.post<User>('/account/register', user),\n    fbLogin: (accessToken: string) => requests.post<User>(`/account/fbLogin?accessToken=${accessToken}`, {}),\n    refreshToken: () => requests.post<User>('/account/refreshToken', {})\n}\n\nconst Profiles = {\n    get: (username: string) => requests.get<Profile>(`/profiles/${username}`),\n    uploadPhoto: (file: Blob) => {\n        let formData = new FormData();\n        formData.append('File', file);\n        return axios.post<Photo>('photos', formData, {\n            headers: { 'Content-type': 'multipart/form-data' }\n        })\n    },\n    setMainPhoto: (id: string) => requests.post(`/photos/${id}/setMain`, {}),\n    deletePhoto: (id: string) => requests.delete(`/photos/${id}`),\n    updateProfile: (profile: Partial<Profile>) => requests.put(`/profiles`, profile),\n    updateFollowing: (username: string) => requests.post(`/follow/${username}`, {}),\n    listFollowings: (username: string, predicate: string) => requests.get<Profile[]>(`/follow/${username}?predicate=${predicate}`),\n    listActivities: (username: string, predicate: string) => requests.get<UserActivity[]>(`/profiles/${username}/activities?predicate=${predicate}`)\n}\n\nconst agent = {\n    Activities,\n    Account,\n    Profiles\n}\n\nexport default agent;","import { Profile } from \"./profile\";\n\nexport interface Activity {\n  id: string;\n  title: string;\n  date: Date | null;\n  description: string;\n  category: string;\n  city: string;\n  venue: string;\n  hostUsername: string;\n  isCancelled: boolean;\n  isGoing: boolean;\n  isHost: boolean;\n  host?: Profile;\n  attendees: Profile[];\n}\n\nexport class Activity implements Activity {\n  constructor(init?: ActivityFormValues) {\n    Object.assign(this, init);\n  }\n}\n\nexport class ActivityFormValues {\n  id?: string = undefined;\n  title: string = '';\n  category: string = '';\n  description: string = '';\n  date: Date | null = null;\n  city: string = '';\n  venue: string = '';\n\n  constructor(activity?: ActivityFormValues) {\n    if (activity) {\n      this.id = activity.id;\n      this.title = activity.title;\n      this.category = activity.category;\n      this.description = activity.description;\n      this.date = activity.date;\n      this.city = activity.city;\n      this.venue = activity.venue;\n    }\n  }\n}","import { User } from \"./user\";\n\nexport interface Profile {\n    username: string;\n    displayName: string;\n    image?: string;\n    bio?: string;\n    followersCount: number;\n    followingCount: number;\n    following: boolean;\n    photos?: Photo[];\n}\n\nexport class Profile implements Profile {\n    constructor(user: User) {\n        this.username = user.username;\n        this.displayName = user.displayName;\n        this.image = user.image;\n    }\n}\n\nexport interface Photo {\n    id: string;\n    url: string\n    isMain: boolean;\n}\n\nexport interface UserActivity {\n    id: string;\n    title: string;\n    category: string;\n    date: Date;\n}","import { makeAutoObservable, reaction, runInAction } from \"mobx\";\nimport agent from \"../api/agent\";\nimport { Activity, ActivityFormValues } from \"../models/activity\";\nimport { format } from \"date-fns\";\nimport { store } from \"./store\";\nimport { Profile } from \"../models/profile\";\nimport { Pagination, PagingParams } from \"../models/pagination\";\n\nexport default class ActivityStore {\n    activityRegistry = new Map<string, Activity>();\n    selectedActivity: Activity | undefined = undefined;\n    editMode = false;\n    loading = false;\n    loadingInitial = false;\n    pagination: Pagination | null = null;\n    pagingParams = new PagingParams();\n    predicate = new Map().set('all', true);\n\n    constructor() {\n        makeAutoObservable(this);\n\n        reaction(\n            () => this.predicate.keys(), \n            () => {\n                this.pagingParams = new PagingParams();\n                this.activityRegistry.clear();\n                this.loadActivities();\n            }\n        )\n    }\n\n    setPagingParams = (pagingPrams: PagingParams) => {\n        this.pagingParams = pagingPrams;\n    }\n\n    setPredicate = (predicate: string, value: string | Date) => {\n        const resetPredicate = () => {\n            this.predicate.forEach((value, key) => {\n                if (key !== 'startDate') this.predicate.delete(key);\n            })\n        }\n        switch (predicate) {\n            case 'all':\n                resetPredicate();\n                this.predicate.set('all', true);\n                break;\n            case 'isGoing':\n                resetPredicate();\n                this.predicate.set('isGoing', true);\n                break;\n            case 'isHost':\n                resetPredicate();\n                this.predicate.set('isHost', true);\n                break;\n            case 'startDate':\n                this.predicate.delete('startDate');\n                this.predicate.set('startDate', value);\n        }\n    }\n\n    get axiosParams() {\n        const params = new URLSearchParams();\n        params.append('pageNumber', this.pagingParams.pageNumber.toString());\n        params.append('pageSize', this.pagingParams.pageSize.toString());\n        this.predicate.forEach((value, key) => {\n            if (key === 'startDate') {\n                params.append(key, (value as Date).toISOString())\n            } else {\n                params.append(key, value)\n            }\n        })\n\n        return params;\n    }\n\n    get activitiesByDate() {\n        return Array.from(this.activityRegistry.values()).sort((a, b) =>\n            a.date!.getTime() - b.date!.getTime())\n    }\n\n    get groupActivities() {\n        return Object.entries(\n            this.activitiesByDate.reduce((activities, activity) => {\n                const date = format(activity.date!, \"dd MMM yyyy\");\n                activities[date] = activities[date] ? [...activities[date], activity] : [activity];\n                return activities;\n            }, {} as { [key: string]: Activity[] })\n        )\n    }\n\n    loadActivities = async () => {\n        this.loadingInitial = true;\n        try {\n            const result = await agent.Activities.list(this.axiosParams);\n            result.data.forEach((activity) => {\n                this.setActivity(activity);\n            })\n            this.setPagination(result.pagination);\n            this.setLoadingInitial(false);\n        } catch (error) {\n            console.log(error);\n            this.setLoadingInitial(false);\n        }\n    }\n\n    setPagination = (pagination: Pagination) => {\n        this.pagination = pagination;\n    }\n\n    loadActivity = async (id: string) => {\n        let activity = this.getActivity(id);\n        if (activity) {\n            this.selectedActivity = activity;\n            return activity\n        } else {\n            this.loadingInitial = true;\n            try {\n                activity = await agent.Activities.details(id);\n                this.setActivity(activity);\n                this.selectedActivity = activity;\n                this.setLoadingInitial(false);\n                return activity;\n            } catch (error) {\n                console.log(error);\n                this.setLoadingInitial(false);\n            }\n        }\n    }\n\n    private setActivity = (activity: Activity) => {\n        const user = store.userStore.user;\n        if (user) {\n            activity.isGoing = activity.attendees!.some(\n                a => a.username === user.username\n            )\n            activity.isHost = activity.hostUsername === user.username;\n            activity.host = activity.attendees?.find(x => x.username === activity.hostUsername);\n        }\n        activity.date = new Date(activity.date!);\n        this.activityRegistry.set(activity.id, activity);\n    }\n\n    private getActivity = (id: string) => {\n        return this.activityRegistry.get(id);\n    }\n\n    setLoadingInitial = (state: boolean) => {\n        this.loadingInitial = state;\n    }\n\n\n    createActivity = async (activity: ActivityFormValues) => {\n        const user = store.userStore.user;\n        const attendee = new Profile(user!);\n        try {\n            await agent.Activities.create(activity);\n            const newActivity = new Activity(activity);\n            newActivity.hostUsername = user!.username;\n            newActivity.attendees = [attendee];\n            this.setActivity(newActivity);\n            runInAction(() => {\n                this.selectedActivity = newActivity;\n            })\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n\n    updateActivity = async (activity: ActivityFormValues) => {\n        try {\n            await agent.Activities.update(activity);\n            runInAction(() => {\n                if (activity.id) {\n                    let updateActivity = { ...this.getActivity(activity.id), ...activity }\n                    this.activityRegistry.set(activity.id, updateActivity as Activity);\n                    this.selectedActivity = updateActivity as Activity;\n                }\n\n            })\n        } catch (error) {\n            console.log(error);\n\n        }\n    }\n\n    deleteActivity = async (id: string) => {\n        this.loading = true;\n        try {\n            await agent.Activities.delete(id);\n            runInAction(() => {\n                this.activityRegistry.delete(id);\n                this.loading = false;\n            })\n        } catch (error) {\n            console.log(error);\n            runInAction(() => {\n                this.loading = false;\n            })\n        }\n    }\n\n    updateAttendance = async () => {\n        const user = store.userStore.user;\n        this.loading = true;\n        try {\n            await agent.Activities.attend(this.selectedActivity!.id);\n            runInAction(() => {\n                if (this.selectedActivity?.isGoing) {\n                    this.selectedActivity.attendees = this.selectedActivity.attendees?.filter(a => a.username !== user?.username);\n                    this.selectedActivity.isGoing = false;\n                } else {\n                    const attendee = new Profile(user!);\n                    this.selectedActivity?.attendees?.push(attendee);\n                    this.selectedActivity!.isGoing = true;\n                }\n                this.activityRegistry.set(this.selectedActivity!.id, this.selectedActivity!)\n            })\n        } catch (error) {\n            console.log(error);\n        } finally {\n            runInAction(() => this.loading = false);\n        }\n    }\n\n    cancelActivityToggle = async () => {\n        this.loading = true;\n        try {\n            await agent.Activities.attend(this.selectedActivity!.id);\n            runInAction(() => {\n                this.selectedActivity!.isCancelled = !this.selectedActivity?.isCancelled;\n                this.activityRegistry.set(this.selectedActivity!.id, this.selectedActivity!);\n            })\n        } catch (error) {\n            console.log(error);\n        } finally {\n            runInAction(() => this.loading = false);\n        }\n    }\n\n    clearSelectedActivity = () => {\n        this.selectedActivity = undefined;\n    }\n\n    updateAttendeeFollowing = (username: string) => {\n        this.activityRegistry.forEach(activity => {\n            activity.attendees.forEach(attendee => {\n                if (attendee.username === username) {\n                    attendee.following ? attendee.followersCount-- : attendee.followersCount++;\n                    attendee.following = !attendee.following;\n                }\n            })\n        })\n    }\n}","import { makeAutoObservable, reaction, runInAction } from \"mobx\";\nimport agent from \"../api/agent\";\nimport { Photo, Profile, UserActivity } from \"../models/profile\";\nimport { store } from \"./store\";\n\nexport default class ProfileStore {\n    profile: Profile | null = null;\n    loadingProfile = false;\n    uploading = false;\n    loading = false;\n    followings: Profile[] = [];\n    loadingFollowings: boolean = false;\n    activeTab: number = 0;\n    userActivities: UserActivity[] = [];\n    loadingActivities = false;\n\n    constructor() {\n        makeAutoObservable(this);\n        reaction(\n            () => this.activeTab,\n            activeTab => {\n                if (activeTab === 3 || activeTab === 4) {\n                    const predicate = activeTab === 3 ? 'followers' : 'following';\n                    this.loadFollowings(predicate);\n                } else {\n                    this.followings = [];\n                }\n            }\n        )\n    }\n\n    setActiveTab = (activeTab: any) => {\n        this.activeTab = activeTab;\n    }\n\n    get isCurrentUser() {\n        if (store.userStore.user && this.profile) {\n            return store.userStore.user.username === this.profile.username;\n        }\n\n        return false;\n    }\n\n    loadProfile = async (username: string) => {\n        this.loadingProfile = true;\n        try {\n            const profile = await agent.Profiles.get(username);\n            runInAction(() => {\n                this.profile = profile;\n                this.loadingProfile = false;\n            })\n        } catch (error) {\n            console.log(error);\n            runInAction(() => this.loadingProfile = false);\n        }\n    }\n\n    uploadPhoto = async (file: Blob) => {\n        this.uploading = true;\n        try {\n            const response = await agent.Profiles.uploadPhoto(file);\n            const photo = response.data;\n            runInAction(() => {\n                if (this.profile) {\n                    this.profile.photos?.push(photo);\n                    if (photo.isMain && store.userStore.user) {\n                        store.userStore.setImage(photo.url);\n                        this.profile.image = photo.url;\n                    }\n                }\n                this.uploading = false;\n            })\n        } catch (error) {\n            console.log(error);\n            runInAction(() => this.uploading = false);\n\n        }\n    }\n\n    setMainPhoto = async (photo: Photo) => {\n        this.loading = true;\n        try {\n            await agent.Profiles.setMainPhoto(photo.id);\n            store.userStore.setImage(photo.url);\n            runInAction(() => {\n                if (this.profile && this.profile?.photos) {\n                    this.profile.photos.find(p => p.isMain)!.isMain = false;\n                    this.profile.photos.find(p => p.id === photo.id)!.isMain = true;\n                    this.profile.image = photo.url;\n                    this.loading = false;\n                }\n            })\n        } catch (error) {\n            runInAction(() => this.loading = false);\n            console.log(error);\n\n        }\n    }\n\n    deletePhoto = async (photo: Photo) => {\n        this.loading = true;\n        try {\n            await agent.Profiles.deletePhoto(photo.id);\n            runInAction(() => {\n                if (this.profile) {\n                    this.profile.photos = this.profile.photos?.filter(p => p.id !== photo.id);\n                    this.loading = false;\n                }\n            })\n        } catch (error) {\n            console.log(error);\n            runInAction(() => this.loading = false);\n\n        }\n    }\n\n    updateProfile = async (profile: Partial<Profile>) => {\n        this.loading = true;\n        try {\n            await agent.Profiles.updateProfile(profile);\n            runInAction(() => {\n                if (profile.displayName && profile.displayName !== store.userStore.user?.displayName) {\n                    store.userStore.setDisplayName(profile.displayName);\n                }\n                this.profile = { ...this.profile, ...profile as Profile };\n                this.loading = false;\n            })\n        } catch (error) {\n            console.log(error);\n            runInAction(() => this.loading = false);\n        }\n    }\n\n    updateFollowing = async (username: string, following: boolean) => {\n        this.loading = true;\n        try {\n            await agent.Profiles.updateFollowing(username);\n            store.activityStore.updateAttendeeFollowing(username);\n            runInAction(() => {\n                if (this.profile && this.profile.username !== store.userStore.user?.username && this.profile.username === username) {\n                    following ? this.profile.followersCount++ : this.profile.followersCount--;\n                    this.profile.following = !this.profile.following;\n                }\n                if (this.profile && this.profile.username === store.userStore.user?.username) {\n                    following ? this.profile.followingCount++ : this.profile.followingCount--;\n                }\n                this.followings.forEach(profile => {\n                    if (profile.username === username) {\n                        profile.following ? profile.followersCount-- : profile.followersCount++;\n                        profile.following = !profile.following;\n                    }\n                })\n                this.loading = false;\n            })\n        } catch (error) {\n            console.log(error);\n            runInAction(() => this.loading = false)\n        }\n    }\n\n    loadFollowings = async (predicate: string) => {\n        this.loadingFollowings = true;\n        try {\n            const followings = await agent.Profiles.listFollowings(this.profile!.username, predicate);\n            runInAction(() => {\n                this.followings = followings;\n                this.loadingFollowings = false;\n            })\n        } catch (error) {\n            console.log(error);\n            runInAction(() => this.loadingFollowings = false);\n\n        }\n    }\n\n    loadUserActivities = async (username: string, predicate?: string) => {\n        this.loadingActivities = true;\n        try {\n            const activities = await agent.Profiles.listActivities(username, predicate!);\n            runInAction(() => {\n                this.userActivities = activities;\n                this.loadingActivities = false;\n            })\n        } catch (error) {\n            console.log(error);\n            runInAction(() => {\n                this.loadingActivities = false;\n            })\n\n        }\n    }\n}","import { makeAutoObservable, runInAction } from \"mobx\";\nimport { history } from \"../..\";\nimport agent from \"../api/agent\";\nimport { User, UserFormValues } from \"../models/user\";\nimport { store } from \"./store\";\n\nexport default class UserStore {\n    user: User | null = null;\n    fbAccessToken: string | null = null;\n    fbLoading = false;\n    refreshTokenTimeout: any;\n\n    constructor() {\n        makeAutoObservable(this)\n    }\n\n    get isLoggedIn() {\n        return !!this.user;\n    }\n\n    login = async (creds: UserFormValues) => {\n        try {\n            const user = await agent.Account.login(creds);\n            store.commonStore.setToken(user.token);\n            this.startRefreshTokenTimer(user);\n            runInAction(() => this.user = user);\n            history.push('/activities');\n            store.modalStore.closeModal();\n        } catch (error) {\n            throw error;\n        }\n    }\n\n    logout = () => {\n        store.commonStore.setToken(null);\n        window.localStorage.removeItem('jwt');\n        this.user = null;\n        history.push('/');\n    }\n\n    getUser = async () => {\n        try {\n            const user = await agent.Account.current();\n            store.commonStore.setToken(user.token);\n            runInAction(() => this.user = user);\n            this.startRefreshTokenTimer(user);\n        } catch (error) {\n            console.log(error);\n\n        }\n    }\n\n    register = async (creds: UserFormValues) => {\n        try {\n            const user = await agent.Account.register(creds);\n            store.commonStore.setToken(user.token);\n            this.startRefreshTokenTimer(user);\n            runInAction(() => this.user = user);\n            history.push('/activities');\n            store.modalStore.closeModal();\n        } catch (error) {\n            throw error;\n        }\n    }\n\n    setImage = (image: string) => {\n        if (this.user) this.user.image = image;\n    }\n\n    setDisplayName = (name: string) => {\n        if (this.user) this.user.displayName = name;\n    }\n\n    getFacebookLoginStatus = async () => {\n        window.FB.getLoginStatus(response => {\n            if (response.status === 'connected') {\n                this.fbAccessToken = response.authResponse.accessToken;\n            }\n        })\n    }\n\n    facebookLogin = () => {\n        this.fbLoading = true;\n        const apiLogin = (accessToken: string) => {\n            agent.Account.fbLogin(accessToken).then(user => {\n                store.commonStore.setToken(user.token);\n                this.startRefreshTokenTimer(user);\n                runInAction(() => {\n                    this.user = user;\n                    this.fbLoading = false;\n                })\n                history.push('/activities');\n            }).catch(error => {\n                console.log(error);\n                runInAction(() => this.fbLoading = false);\n            })\n        }\n        if (this.fbAccessToken) {\n            apiLogin(this.fbAccessToken)\n        } else {\n            window.FB.login(response => {\n                apiLogin(response.authResponse.accessToken);\n            }, { scope: 'public_profile, email' })\n        }\n    }\n\n    refreshToken = async () => {\n        this.stopRefreshTokenTimer();\n        try {\n            const user = await agent.Account.refreshToken();\n            runInAction(() => this.user = user);\n            store.commonStore.setToken(user.token);\n            this.startRefreshTokenTimer(user);\n        } catch (error) {\n            console.log(error);\n\n        }\n    }\n\n    private startRefreshTokenTimer(user: User) {\n        const jwtToken = JSON.parse(atob(user.token.split('.')[1]));\n        const expires = new Date(jwtToken.exp * 1000);\n        const timeout = expires.getTime() - Date.now() - (60 * 1000);\n        this.refreshTokenTimeout = setTimeout(this.refreshToken, timeout);\n    }\n\n    private stopRefreshTokenTimer() {\n        clearTimeout(this.refreshTokenTimeout);\n    }\n}","import { createContext, useContext } from \"react\";\nimport ActivityStore from \"./activityStore\";\nimport CommentStore from \"./commentStore\";\nimport CommonStore from \"./commonStore\";\nimport ModalStore from \"./modalStore\";\nimport ProfileStore from \"./profileStore\";\nimport UserStore from \"./userStore\";\n\ninterface Store {\n    activityStore: ActivityStore;\n    commonStore: CommonStore;\n    userStore: UserStore;\n    modalStore: ModalStore;\n    profileStore: ProfileStore;\n    commentStore: CommentStore;\n}\n\nexport const store: Store = {\n    activityStore: new ActivityStore(),\n    commonStore: new CommonStore(),\n    userStore: new UserStore(),\n    modalStore: new ModalStore(),\n    profileStore: new ProfileStore(),\n    commentStore: new CommentStore(),\n}\n\nexport const StoreContext = createContext(store);\n\nexport function useStore() {\n    return useContext(StoreContext);\n}","import { makeAutoObservable, reaction } from \"mobx\";\nimport { ServerError } from \"../models/serverError\";\n\nexport default class CommonStore {\n    error: ServerError | null = null;\n    token: string | null = window.localStorage.getItem('jwt');\n    appLoaded = false;\n\n    constructor() {\n        makeAutoObservable(this);\n\n        reaction(\n            () => this.token,\n            token => {\n                if (token) {\n                    window.localStorage.setItem('jwt', token)\n                } else {\n                    window.localStorage.removeItem('jwt')\n                }\n            }\n        )\n    }\n\n    setServerError = (error: ServerError) => {\n        this.error = error;\n    }\n\n    setToken = (token: string | null) => {\n        this.token = token;\n    }\n\n    setAppLoaded = () => {\n        this.appLoaded = true;\n    }\n}","import { makeAutoObservable } from \"mobx\"\n\ninterface Modal {\n    open: boolean;\n    body: JSX.Element | null;\n}\n\nexport default class ModalStore {\n    modal: Modal = {\n        open: false,\n        body: null\n    }\n\n    constructor() {\n        makeAutoObservable(this)\n    }\n\n    openModal = (content: JSX.Element) => {\n        this.modal.open = true;\n        this.modal.body = content;\n    }\n\n    closeModal = () => {\n        this.modal.open = false;\n        this.modal.body = null;\n    }\n}","import { HubConnection, HubConnectionBuilder, LogLevel } from \"@microsoft/signalr\";\nimport { makeAutoObservable, runInAction } from \"mobx\";\nimport { ChatComment } from \"../models/comment\"\nimport { store } from \"./store\";\n\nexport default class CommentStore {\n    comments: ChatComment[] = [];\n    hubConnection: HubConnection | null = null;\n\n    constructor() {\n        makeAutoObservable(this);\n    }\n\n    createHubConnection = (activityId: string) => {\n        if (store.activityStore.selectedActivity) {\n            this.hubConnection = new HubConnectionBuilder()\n                .withUrl(process.env.REACT_APP_CHAT_URL + '?activityId=' + activityId, {\n                    accessTokenFactory: () => store.userStore.user?.token!\n                })\n                .withAutomaticReconnect()\n                .configureLogging(LogLevel.Information)\n                .build();\n\n            this.hubConnection.start().catch(error => console.log(\"Error establishing the connection: \", error));\n\n            this.hubConnection.on('LoadComments', (comments: ChatComment[]) => {\n                runInAction(() => {\n                    comments.forEach(comment => {\n                        comment.createAt = new Date(comment.createAt + 'Z')\n                    })\n                    this.comments = comments\n                });\n            })\n\n            this.hubConnection.on('ReceiveComment', (comment: ChatComment) => {\n                runInAction(() => {\n                    comment.createAt = new Date(comment.createAt);\n                    this.comments.unshift(comment)\n                });\n            })\n        }\n    }\n\n    stopHubConnection = () => {\n        this.hubConnection?.stop().catch(error => console.log(\"Error stopping connection: \", error));\n    }\n\n    clearComments = () => {\n        this.comments = [];\n        this.stopHubConnection();\n    }\n\n    addComment = async (values: any) => {\n        values.activityId = store.activityStore.selectedActivity?.id;\n        try {\n            await this.hubConnection?.invoke('SendComment', values);\n        } catch (error) {\n            console.log(error);\n\n        }\n    }\n}","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport { Button, Container, Dropdown, Image, Menu } from \"semantic-ui-react\";\nimport { useStore } from \"../stores/store\";\n\nconst NavBar = () => {\n  const {\n    userStore: { user, logout },\n  } = useStore();\n  return (\n    <Menu inverted fixed=\"top\">\n      <Container>\n        <Menu.Item as={NavLink} to=\"/\" exact header>\n          <img\n            src=\"/assets/logo.png\"\n            alt=\"logo\"\n            style={{ marginRight: \"10px\" }}\n          />\n          Reactivites\n        </Menu.Item>\n        <Menu.Item as={NavLink} to=\"/activities\" name=\"Activities\" />\n        <Menu.Item as={NavLink} to=\"/errors\" name=\"Errors\" />\n        <Menu.Item>\n          <Button\n            as={NavLink}\n            to=\"/createActivity\"\n            positive\n            content=\"Create Activity\"\n          />\n        </Menu.Item>\n        <Menu.Item position=\"right\">\n          <Image\n            src={user?.image || \"/assets/user.png\"}\n            avatar\n            spaced=\"right\"\n          />\n          <Dropdown pointing=\"top left\" text={user?.displayName}>\n            <Dropdown.Menu>\n              <Dropdown.Item\n                as={Link}\n                to={`/profiles/${user?.username}`}\n                text=\"My profile\"\n                icon=\"user\"\n              />\n              <Dropdown.Item onClick={logout} text=\"Logout\" icon=\"power\" />\n            </Dropdown.Menu>\n          </Dropdown>\n        </Menu.Item>\n      </Container>\n    </Menu>\n  );\n};\n\nexport default observer(NavBar);\n","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport Calendar from \"react-calendar\";\nimport { Header, Menu } from \"semantic-ui-react\";\nimport { useStore } from \"../../../app/stores/store\";\n\nconst ActivityFilters = () => {\n  const {\n    activityStore: { predicate, setPredicate },\n  } = useStore();\n  return (\n    <>\n      <Menu vertical size=\"large\" style={{ width: \"100%\", marginTop: 25 }}>\n        <Header icon=\"filter\" attached color=\"teal\" content=\"Filters\" />\n        <Menu.Item\n          content=\"All Activities\"\n          active={predicate.has(\"all\")}\n          onClick={() => setPredicate(\"all\", \"true\")}\n        />\n        <Menu.Item\n          content=\"I'm going\"\n          active={predicate.has(\"isGoing\")}\n          onClick={() => setPredicate(\"isGoing\", \"true\")}\n        />\n        <Menu.Item\n          content=\"I'm hosting\"\n          active={predicate.has(\"isHost\")}\n          onClick={() => setPredicate(\"isHost\", \"true\")}\n        />\n      </Menu>\n      <Header />\n      <Calendar\n        onChange={(date) => setPredicate(\"startDate\", date as Date)}\n        value={predicate.get(\"startDate\") || new Date()}\n      />\n    </>\n  );\n};\n\nexport default observer(ActivityFilters);\n","import { observer } from \"mobx-react-lite\";\nimport React, { SyntheticEvent } from \"react\";\nimport { Button, Reveal } from \"semantic-ui-react\";\nimport { Profile } from \"../../app/models/profile\";\nimport { useStore } from \"../../app/stores/store\";\n\ninterface Props {\n  profile: Profile;\n}\n\nconst FollowButton = ({ profile }: Props) => {\n  const { profileStore, userStore } = useStore();\n  const { updateFollowing, loading } = profileStore;\n\n  if (userStore.user?.username === profile.username) return null;\n\n  function handleFollow(e: SyntheticEvent, username: string) {\n    e.preventDefault();\n    profile.following\n      ? updateFollowing(username, false)\n      : updateFollowing(username, true);\n  }\n\n  return (\n    <Reveal animated=\"move\">\n      <Reveal.Content visible style={{ width: \"100%\" }}>\n        <Button\n          fluid\n          color=\"teal\"\n          content={profile.following ? \"Following\" : \"Not following\"}\n        />\n      </Reveal.Content>\n      <Reveal.Content hidden style={{ width: \"100%\" }}>\n        <Button\n          fluid\n          basic\n          color={profile.following ? \"red\" : \"green\"}\n          content={profile.following ? \"Unfollow\" : \"Follow\"}\n          loading={loading}\n          onClick={(e) => handleFollow(e, profile.username)}\n        />\n      </Reveal.Content>\n    </Reveal>\n  );\n};\n\nexport default observer(FollowButton);\n","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Card, Icon, Image } from \"semantic-ui-react\";\nimport { Profile } from \"../../app/models/profile\";\nimport FollowButton from \"./FollowButton\";\n\ninterface Props {\n  profile: Profile;\n}\n\nconst ProfileCard = ({ profile }: Props) => {\n  function truncate(str: string | undefined) {\n    if (str) {\n      return str.length > 40 ? str.substring(0, 37) + \"...\" : str;\n    }\n  }\n\n  return (\n    <Card as={Link} to={`/profiles/${profile.username}`}>\n      <Image src={profile.image || \"/assets/user.png\"} />\n      <Card.Content>\n        <Card.Header>{profile.displayName}</Card.Header>\n        <Card.Description>{truncate(profile.bio)}</Card.Description>\n      </Card.Content>\n      <Card.Content extra>\n        <Icon name=\"user\" />\n        {profile.followersCount} followers\n      </Card.Content>\n      <FollowButton profile={profile} />\n    </Card>\n  );\n};\n\nexport default observer(ProfileCard);\n","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Image, List, Popup } from \"semantic-ui-react\";\nimport { Profile } from \"../../../app/models/profile\";\nimport ProfileCard from \"../../profiles/ProfileCard\";\n\ninterface Props {\n  attendees: Profile[];\n}\n\nconst ActivityListItemAttendee = ({ attendees }: Props) => {\n  const styles = {\n    borderColor: \"orange\",\n    borderWidth: 3,\n  };\n\n  return (\n    <List horizontal>\n      {attendees.map((attendee) => (\n        <Popup\n          hoverable\n          key={attendee.username}\n          trigger={\n            <List.Item\n              key={attendee.username}\n              as={Link}\n              to={`/profiles/${attendee.username}`}\n            >\n              <Image\n                size=\"mini\"\n                circular\n                src={attendee.image || \"/assets/user.png\"}\n                bordered\n                style={attendee.following ? styles : null}\n              />\n            </List.Item>\n          }\n        >\n          <Popup.Content>\n            <ProfileCard profile={attendee} />\n          </Popup.Content>\n        </Popup>\n      ))}\n    </List>\n  );\n};\nexport default observer(ActivityListItemAttendee);\n","import { Link } from \"react-router-dom\";\nimport { Button, Icon, Item, Label, Segment } from \"semantic-ui-react\";\nimport { Activity } from \"../../../app/models/activity\";\nimport { format } from \"date-fns\";\nimport ActivityListItemAttendee from \"./ActivityListItemAttendee\";\n\ninterface Props {\n  activity: Activity;\n}\n\nexport const ActivityListItem = ({ activity }: Props) => {\n  return (\n    <Segment.Group>\n      <Segment>\n        {activity.isCancelled && (\n          <Label\n            attached=\"top\"\n            color=\"red\"\n            content=\"Cancelled\"\n            style={{ textAlign: \"center\" }}\n          />\n        )}\n        <Item.Group>\n          <Item>\n            <Item.Image\n              style={{ marginBottom: 3 }}\n              size=\"tiny\"\n              circular\n              src={activity.host?.image || \"/assets/user.png\"}\n            />\n            <Item.Content>\n              <Item.Header as={Link} to={`/activities/${activity.id}`}>\n                {activity.title}\n              </Item.Header>\n              <Item.Description>\n                Host by{\" \"}\n                <Link to={`/profiles/${activity.hostUsername}`}>\n                  {activity.host?.displayName}\n                </Link>{\" \"}\n              </Item.Description>\n              {activity.isHost && (\n                <Item.Description>\n                  <Label basic color=\"orange\">\n                    You are hosting this activity\n                  </Label>\n                </Item.Description>\n              )}\n              {activity.isGoing && !activity.isHost && (\n                <Item.Description>\n                  <Label basic color=\"green\">\n                    You are going to this activity\n                  </Label>\n                </Item.Description>\n              )}\n            </Item.Content>\n          </Item>\n        </Item.Group>\n      </Segment>\n      <Segment>\n        <span>\n          <Icon name=\"clock\" /> {format(activity.date!, \"dd MMM yyyy h:mm aa\")}\n          <Icon name=\"marker\" /> {activity.venue}\n        </span>\n      </Segment>\n      <Segment secondary>\n        <ActivityListItemAttendee attendees={activity.attendees!} />\n      </Segment>\n      <Segment clearing>\n        <span>{activity.description}</span>\n        <Button\n          as={Link}\n          to={`/activities/${activity.id}`}\n          color=\"teal\"\n          floated=\"right\"\n          content=\"View\"\n        />\n      </Segment>\n    </Segment.Group>\n  );\n};\n","import { observer } from \"mobx-react-lite\";\nimport { Fragment } from \"react\";\nimport { Header } from \"semantic-ui-react\";\nimport { useStore } from \"../../../app/stores/store\";\nimport { ActivityListItem } from \"./ActivityListItem\";\n\nconst ActivityList = () => {\n  const { activityStore } = useStore();\n  const { groupActivities } = activityStore;\n\n  return (\n    <>\n      {groupActivities.map(([group, activities]) => (\n        <Fragment key={group}>\n          <Header sub color=\"teal\">\n            {group}\n          </Header>\n          {activities.map((activity) => (\n            <ActivityListItem key={activity.id} activity={activity} />\n          ))}\n        </Fragment>\n      ))}\n    </>\n  );\n};\n\nexport default observer(ActivityList);\n","import React, { Fragment } from 'react';\nimport { Segment, Button, Placeholder } from 'semantic-ui-react';\n\nexport default function ActivityListItemPlaceholder() {\n    return (\n        <Fragment>\n            <Placeholder fluid style={{ marginTop: 25 }}>\n                <Segment.Group>\n                    <Segment style={{ minHeight: 110 }}>\n                        <Placeholder>\n                            <Placeholder.Header image>\n                                <Placeholder.Line />\n                                <Placeholder.Line />\n                            </Placeholder.Header>\n                            <Placeholder.Paragraph>\n                                <Placeholder.Line />\n                            </Placeholder.Paragraph>\n                        </Placeholder>\n                    </Segment>\n                    <Segment>\n                        <Placeholder>\n                            <Placeholder.Line />\n                            <Placeholder.Line />\n                        </Placeholder>\n                    </Segment>\n                    <Segment secondary style={{ minHeight: 70 }} />\n                    <Segment clearing>\n                        <Button disabled color='blue' floated='right' content='View' />\n                    </Segment>\n                </Segment.Group>\n            </Placeholder>\n        </Fragment>\n    );\n};\n","import { observer } from \"mobx-react-lite\";\nimport { useEffect, useState } from \"react\";\nimport InfiniteScroll from \"react-infinite-scroller\";\nimport { Grid, Loader } from \"semantic-ui-react\";\nimport { PagingParams } from \"../../../app/models/pagination\";\nimport { useStore } from \"../../../app/stores/store\";\nimport ActivityFilters from \"./ActivityFilters\";\nimport ActivityList from \"./ActivityList\";\nimport ActivityListItemPlaceholder from \"./ActivityListItemPlaceholder\";\n\nconst ActivityDashboard = () => {\n  const { activityStore } = useStore();\n  const { loadActivities, activityRegistry, setPagingParams, pagination } =\n    activityStore;\n  const [loadingNext, setLoadingNext] = useState(false);\n\n  function handleGetNext() {\n    setLoadingNext(true);\n    setPagingParams(new PagingParams(pagination!.currentPage + 1));\n    loadActivities().then(() => setLoadingNext(false));\n  }\n\n  useEffect(() => {\n    if (activityRegistry.size <= 1) loadActivities();\n  }, [activityRegistry.size, loadActivities]);\n\n  return (\n    <Grid>\n      <Grid.Column width=\"10\">\n        {activityStore.loadingInitial && !loadingNext ? (\n          <>\n            <ActivityListItemPlaceholder />\n            <ActivityListItemPlaceholder />\n          </>\n        ) : (\n          <InfiniteScroll\n            pageStart={0}\n            loadMore={handleGetNext}\n            hasMore={\n              !loadingNext &&\n              !!pagination &&\n              pagination.currentPage < pagination.totalPages\n            }\n            initialLoad={false}\n          >\n            <ActivityList />\n          </InfiniteScroll>\n        )}\n      </Grid.Column>\n      <Grid.Column width=\"6\">\n        <ActivityFilters />\n      </Grid.Column>\n      <Grid.Column width={10}>\n        <Loader active={loadingNext} />\n      </Grid.Column>\n    </Grid>\n  );\n};\nexport default observer(ActivityDashboard);\n","import { useField } from \"formik\";\nimport React from \"react\";\nimport { Form, Label } from \"semantic-ui-react\";\n\ninterface Props {\n  placeholder: string;\n  name: string;\n  type?: string;\n  label?: string;\n}\n\nconst MyTextInput = (props: Props) => {\n  const [field, meta] = useField(props.name);\n  return (\n    <Form.Field error={meta.touched && !!meta.error}>\n      <label>{props.label}</label>\n      <input {...field} {...props} />\n      {meta.touched && meta.error ? (\n        <Label basic color=\"red\">\n          {meta.error}\n        </Label>\n      ) : null}\n    </Form.Field>\n  );\n};\n\nexport default MyTextInput;\n","import { ErrorMessage, Form, Formik } from \"formik\";\nimport { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Button, Header, Label } from \"semantic-ui-react\";\nimport MyTextInput from \"../../app/common/form/MyTextInput\";\nimport { useStore } from \"../../app/stores/store\";\n\nconst LoginForm = () => {\n  const { userStore } = useStore();\n  return (\n    <Formik\n      initialValues={{ email: \"\", password: \"\", error: null }}\n      onSubmit={(values, { setErrors }) =>\n        userStore\n          .login(values)\n          .catch((error) => setErrors({ error: \"Invalid email or password\" }))\n      }\n    >\n      {({ handleSubmit, isSubmitting, errors }) => (\n        <Form className=\"ui form\" onSubmit={handleSubmit} autoComplete=\"off\">\n          <Header\n            as=\"h2\"\n            content=\"Login to Reactivities\"\n            color=\"teal\"\n            textAlign=\"center\"\n          />\n          <MyTextInput name=\"email\" placeholder=\"Email\" />\n          <MyTextInput name=\"password\" placeholder=\"Password\" type=\"password\" />\n          <ErrorMessage\n            name=\"error\"\n            render={() => (\n              <Label\n                style={{ marginBottom: 10 }}\n                basic\n                color=\"red\"\n                content={errors.error}\n              />\n            )}\n          />\n          <Button\n            loading={isSubmitting}\n            positive\n            content=\"Login\"\n            type=\"submit\"\n            fluid\n          />\n        </Form>\n      )}\n    </Formik>\n  );\n};\nexport default observer(LoginForm);\n","import React from \"react\";\nimport { Message } from \"semantic-ui-react\";\n\ninterface Props {\n  errors: any;\n}\n\nexport const ValidationErrors = ({ errors }: Props) => {\n  return (\n    <Message error>\n      {errors && (\n        <Message.List>\n          {errors.map((err: any, i: any) => (\n            <Message.Item key={i}>{err}</Message.Item>\n          ))}\n        </Message.List>\n      )}\n    </Message>\n  );\n};\n","import { ErrorMessage, Form, Formik } from \"formik\";\nimport { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Button, Header } from \"semantic-ui-react\";\nimport MyTextInput from \"../../app/common/form/MyTextInput\";\nimport { useStore } from \"../../app/stores/store\";\nimport * as Yup from \"yup\";\nimport { ValidationErrors } from \"../errors/ValidationErrors\";\n\nconst RegisterForm = () => {\n  const { userStore } = useStore();\n  return (\n    <Formik\n      initialValues={{\n        displayName: \"\",\n        username: \"\",\n        email: \"\",\n        password: \"\",\n        error: null,\n      }}\n      onSubmit={(values, { setErrors }) =>\n        userStore.register(values).catch((error) => setErrors({ error }))\n      }\n      validationSchema={Yup.object({\n        displayName: Yup.string().required(),\n        username: Yup.string().required(),\n        email: Yup.string().required().email(),\n        password: Yup.string().required(),\n      })}\n    >\n      {({ handleSubmit, isSubmitting, errors, isValid, dirty }) => (\n        <Form className=\"ui form error\" onSubmit={handleSubmit} autoComplete=\"off\">\n          <Header\n            as=\"h2\"\n            content=\"Sign up to Reactivities\"\n            color=\"teal\"\n            textAlign=\"center\"\n          />\n          <MyTextInput name=\"displayName\" placeholder=\"Display Name\" />\n          <MyTextInput name=\"username\" placeholder=\"User Name\" />\n          <MyTextInput name=\"email\" placeholder=\"Email\" />\n          <MyTextInput name=\"password\" placeholder=\"Password\" type=\"password\" />\n          <ErrorMessage\n            name=\"error\"\n            render={() => <ValidationErrors errors={errors.error} />}\n          />\n          <Button\n            disabled={!isValid || !dirty || isSubmitting}\n            loading={isSubmitting}\n            positive\n            content=\"Register\"\n            type=\"submit\"\n            fluid\n          />\n        </Form>\n      )}\n    </Formik>\n  );\n};\nexport default observer(RegisterForm);\n","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Button,\n  Container,\n  Divider,\n  Header,\n  Image,\n  Segment,\n} from \"semantic-ui-react\";\nimport { useStore } from \"../../app/stores/store\";\nimport LoginForm from \"../users/LoginForm\";\nimport RegisterForm from \"../users/RegisterForm\";\n\nconst HomePage = () => {\n  const { userStore, modalStore } = useStore();\n  return (\n    <Segment inverted textAlign=\"center\" vertical className=\"masthead\">\n      <Container text>\n        <Header as=\"h1\" inverted>\n          <Image\n            size=\"massive\"\n            src=\"/assets/logo.png\"\n            alt=\"logo\"\n            sytle={{ marginBottom: 12 }}\n          />\n          Reactivites\n        </Header>\n        {userStore.isLoggedIn ? (\n          <>\n            <Header as=\"h2\" inverted content=\"Welcome to Reactivities\" />\n            <Button as={Link} to=\"/activities\" size=\"huge\" inverted>\n              Go to Activities!\n            </Button>\n          </>\n        ) : (\n          <>\n            <Button\n              onClick={() => modalStore.openModal(<LoginForm />)}\n              size=\"huge\"\n              inverted\n            >\n              Login\n            </Button>\n            <Button\n              onClick={() => modalStore.openModal(<RegisterForm />)}\n              size=\"huge\"\n              inverted\n            >\n              Register\n            </Button>\n            <Divider horizontal inverted>\n              OR\n            </Divider>\n            <Button\n              loading={userStore.fbLoading}\n              size=\"huge\"\n              inverted\n              color=\"facebook\"\n              content=\"Login with Facebook\"\n              onClick={userStore.facebookLogin}\n            />\n          </>\n        )}\n      </Container>\n    </Segment>\n  );\n};\n\nexport default observer(HomePage);\n","import React from \"react\";\nimport { Dimmer, Loader } from \"semantic-ui-react\";\n\ninterface Props {\n  inverted?: boolean;\n  content?: string;\n}\n\nconst LoadingComponent = ({\n  inverted = true,\n  content = \"Loading...\",\n}: Props) => {\n  return (\n    <Dimmer active={true} inverted={inverted}>\n      <Loader content={content} />\n    </Dimmer>\n  );\n};\nexport default LoadingComponent;\n","import { useField } from \"formik\";\nimport React from \"react\";\nimport { Form, Label } from \"semantic-ui-react\";\n\ninterface Props {\n  placeholder: string;\n  name: string;\n  rows: number;\n  label?: string;\n}\n\nconst MyTextArea = (props: Props) => {\n  const [field, meta] = useField(props.name);\n  return (\n    <Form.Field error={meta.touched && !!meta.error}>\n      <label>{props.label}</label>\n      <textarea {...field} {...props} />\n      {meta.touched && meta.error ? (\n        <Label basic color=\"red\">\n          {meta.error}\n        </Label>\n      ) : null}\n    </Form.Field>\n  );\n};\n\nexport default MyTextArea;\n","import { useField } from \"formik\";\nimport React from \"react\";\nimport { Form, Label, Select } from \"semantic-ui-react\";\n\ninterface Props {\n  placeholder: string;\n  name: string;\n  options: any;\n  label?: string;\n}\n\nconst MySelectInput = (props: Props) => {\n  const [field, meta, helpers] = useField(props.name);\n  return (\n    <Form.Field error={meta.touched && !!meta.error}>\n      <label>{props.label}</label>\n      <Select\n        clearable\n        options={props.options}\n        value={field.value || null}\n        onChange={(e, d) => helpers.setValue(d.value)}\n        onBlur={() => helpers.setTouched(true)}\n        placeholder={props.placeholder}\n      />\n      {meta.touched && meta.error ? (\n        <Label basic color=\"red\">\n          {meta.error}\n        </Label>\n      ) : null}\n    </Form.Field>\n  );\n};\n\nexport default MySelectInput;\n","import { useField } from \"formik\";\nimport React from \"react\";\nimport { Form, Label } from \"semantic-ui-react\";\nimport DatePicker, { ReactDatePickerProps } from \"react-datepicker\";\n\nconst MyDateInput = (props: Partial<ReactDatePickerProps>) => {\n  const [field, meta, helpers] = useField(props.name!);\n  return (\n    <Form.Field error={meta.touched && !!meta.error}>\n      <DatePicker\n        {...field}\n        {...props}\n        selected={(field.value && new Date(field.value)) || null}\n        onChange={(value) => helpers.setValue(value)}\n      />\n      {meta.touched && meta.error ? (\n        <Label basic color=\"red\">\n          {meta.error}\n        </Label>\n      ) : null}\n    </Form.Field>\n  );\n};\n\nexport default MyDateInput;\n","export const categoryOptions = [\n  { text: \"Drinks\", value: \"drinks\" },\n  { text: \"Culture\", value: \"culture\" },\n  { text: \"Film\", value: \"film\" },\n  { text: \"Food\", value: \"food\" },\n  { text: \"Music\", value: \"music\" },\n  { text: \"Travel\", value: \"travel\" },\n];\n","import { observer } from \"mobx-react-lite\";\nimport { useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router\";\nimport { Button, Header, Segment } from \"semantic-ui-react\";\nimport LoadingComponent from \"../../../app/layout/LoadingComponent\";\nimport { useStore } from \"../../../app/stores/store\";\nimport { v4 as uuid } from \"uuid\";\nimport { Link } from \"react-router-dom\";\nimport { Formik, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport MyTextInput from \"../../../app/common/form/MyTextInput\";\nimport MyTextArea from \"../../../app/common/form/MyTextArea\";\nimport MySelectInput from \"../../../app/common/form/MySelectInput\";\nimport MyDateInput from \"../../../app/common/form/MyDateInput\";\nimport { categoryOptions } from \"../../../app/common/options/categoryOptions\";\nimport { ActivityFormValues } from \"../../../app/models/activity\";\n\nexport const ActivityForm = () => {\n  const history = useHistory();\n  const { activityStore } = useStore();\n  const {\n    createActivity,\n    updateActivity,\n    loadActivity,\n    loadingInitial,\n  } = activityStore;\n  const { id } = useParams<{ id: string }>();\n\n  const [activity, setActivity] = useState<ActivityFormValues>(new ActivityFormValues());\n\n  const validationCchema = Yup.object({\n    title: Yup.string().required(\"The activity title is required.\"),\n    description: Yup.string().required(\"The activity description is required.\"),\n    category: Yup.string().required(),\n    date: Yup.string().required(\"Date is required\").nullable(),\n    venue: Yup.string().required(),\n    city: Yup.string().required(),\n  });\n\n  useEffect(() => {\n    if (id) loadActivity(id).then((activity) => setActivity(new ActivityFormValues(activity)));\n  }, [id, loadActivity]);\n\n  function handleFormSubmit(activity: ActivityFormValues) {\n    if (!activity.id) {\n      let newActivity = {\n        ...activity,\n        id: uuid(),\n      };\n      createActivity(newActivity).then(() =>\n        history.push(`/activities/${newActivity.id}`)\n      );\n    } else {\n      updateActivity(activity).then(() =>\n        history.push(`/activities/${activity.id}`)\n      );\n    }\n  }\n\n  if (loadingInitial) return <LoadingComponent content=\"Loading activity...\" />;\n\n  return (\n    <Segment clearing>\n      <Header content=\"Activity Details\" sub color=\"teal\" />\n      <Formik\n        validationSchema={validationCchema}\n        enableReinitialize\n        initialValues={activity}\n        onSubmit={(values) => handleFormSubmit(values)}\n      >\n        {({ handleSubmit, isValid, isSubmitting, dirty }) => (\n          <Form className=\"ui form\" onSubmit={handleSubmit} autoComplete=\"off\">\n            <MyTextInput name=\"title\" placeholder=\"Title\" />\n            <MyTextArea rows={3} placeholder=\"Description\" name=\"description\" />\n            <MySelectInput\n              options={categoryOptions}\n              placeholder=\"Category\"\n              name=\"category\"\n            />\n            <MyDateInput\n              placeholderText=\"Date\"\n              name=\"date\"\n              showTimeSelect\n              timeCaption=\"time\"\n              dateFormat=\"MMMM d, yyyy h:mm aa\"\n            />\n            <Header content=\"Location Details\" sub color=\"teal\" />\n            <MyTextInput placeholder=\"City\" name=\"city\" />\n            <MyTextInput placeholder=\"Venue\" name=\"venue\" />\n            <Button\n              disabled={isSubmitting || !dirty || !isValid}\n              loading={isSubmitting}\n              floated=\"right\"\n              positive\n              type=\"submit\"\n              content=\"Submit\"\n            />\n            <Button\n              as={Link}\n              to=\"/activities\"\n              floated=\"right\"\n              type=\"button\"\n              content=\"Cancel\"\n            />\n          </Form>\n        )}\n      </Formik>\n    </Segment>\n  );\n};\nexport default observer(ActivityForm);\n","import { Formik, Form, Field, FieldProps } from \"formik\";\nimport { observer } from \"mobx-react-lite\";\nimport React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Segment, Header, Comment, Loader } from \"semantic-ui-react\";\nimport { useStore } from \"../../../app/stores/store\";\nimport * as Yup from \"yup\";\nimport { formatDistanceToNow } from \"date-fns\";\n\ninterface Props {\n  activityId: string;\n}\n\nexport default observer(function ActivityDetailedChat({ activityId }: Props) {\n  const { commentStore } = useStore();\n\n  useEffect(() => {\n    if (activityId) {\n      commentStore.createHubConnection(activityId);\n    }\n    return () => {\n      commentStore.clearComments();\n    };\n  }, [commentStore, activityId]);\n\n  return (\n    <>\n      <Segment\n        textAlign=\"center\"\n        attached=\"top\"\n        inverted\n        color=\"teal\"\n        style={{ border: \"none\" }}\n      >\n        <Header>Chat about this event</Header>\n      </Segment>\n      <Segment attached clearing>\n        <Formik\n          onSubmit={(values, { resetForm }) =>\n            commentStore.addComment(values).then(() => resetForm())\n          }\n          initialValues={{ body: \"\" }}\n          validationSchema={Yup.object({\n            body: Yup.string().required(),\n          })}\n        >\n          {({ isSubmitting, isValid, handleSubmit }) => (\n            <Form className=\"ui form\">\n              <Field name=\"body\">\n                {(props: FieldProps) => (\n                  <div style={{ position: \"relative\" }}>\n                    <Loader active={isSubmitting} />\n                    <textarea\n                      placeholder=\"Enter your comment (Enter to submit, SHIFT + enter for new line)\"\n                      rows={2}\n                      {...props.field}\n                      onKeyPress={(e) => {\n                        if (e.key === \"Enter\" && e.shiftKey) {\n                          return;\n                        }\n                        if (e.key === \"Enter\" && !e.shiftKey) {\n                          e.preventDefault();\n                          isValid && handleSubmit();\n                        }\n                      }}\n                    />\n                  </div>\n                )}\n              </Field>\n            </Form>\n          )}\n        </Formik>\n        <Comment.Group>\n          {commentStore.comments.map((comment) => (\n            <Comment key={comment.id}>\n              <Comment.Avatar src={comment.image || \"/assets/user.png\"} />\n              <Comment.Content>\n                <Comment.Author as={Link} to={`/profiles/${comment.username}`}>\n                  {comment.displayName}\n                </Comment.Author>\n                <Comment.Metadata>\n                  <div>{formatDistanceToNow(comment.createAt)} ago</div>\n                </Comment.Metadata>\n                <Comment.Text style={{ whiteSpace: \"pre-wrap\" }}>\n                  {comment.body}\n                </Comment.Text>\n              </Comment.Content>\n            </Comment>\n          ))}\n        </Comment.Group>\n      </Segment>\n    </>\n  );\n});\n","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Header, Item, Segment, Image, Label } from \"semantic-ui-react\";\nimport { Activity } from \"../../../app/models/activity\";\nimport { format } from \"date-fns\";\nimport { useStore } from \"../../../app/stores/store\";\n\nconst activityImageStyle = {\n  filter: \"brightness(30%)\",\n};\n\nconst activityImageTextStyle = {\n  position: \"absolute\",\n  bottom: \"5%\",\n  left: \"5%\",\n  width: \"100%\",\n  height: \"auto\",\n  color: \"white\",\n};\n\ninterface Props {\n  activity: Activity;\n}\n\nexport default observer(function ActivityDetailedHeader({ activity }: Props) {\n  const {\n    activityStore: { updateAttendance, loading, cancelActivityToggle },\n  } = useStore();\n  return (\n    <Segment.Group>\n      <Segment basic attached=\"top\" style={{ padding: \"0\" }}>\n        {activity.isCancelled && (\n          <Label\n            style={{ position: \"absolute\", zIndex: 1000, left: -14, top: 20 }}\n            ribbon\n            color=\"red\"\n            content=\"Cancelled\"\n          />\n        )}\n        <Image\n          src={`/assets/categoryImages/${activity.category}.jpg`}\n          fluid\n          style={activityImageStyle}\n        />\n        <Segment style={activityImageTextStyle} basic>\n          <Item.Group>\n            <Item>\n              <Item.Content>\n                <Header\n                  size=\"huge\"\n                  content={activity.title}\n                  style={{ color: \"white\" }}\n                />\n                <p>{format(activity.date!, \"dd MMM yyyy h:mm aa\")}</p>\n                <p>\n                  Hosted by{\" \"}\n                  <strong>\n                    <Link to={`/profiles/${activity.host?.username}`}>\n                      {activity.host?.displayName}\n                    </Link>\n                  </strong>\n                </p>\n              </Item.Content>\n            </Item>\n          </Item.Group>\n        </Segment>\n      </Segment>\n      <Segment clearing attached=\"bottom\">\n        {activity.isHost ? (\n          <>\n            <Button\n              color={activity.isCancelled ? \"green\" : \"red\"}\n              floated=\"left\"\n              basic\n              content={\n                activity.isCancelled\n                  ? \"Re-activate Activity\"\n                  : \"Cancel Activity\"\n              }\n              onClick={cancelActivityToggle}\n              loading={loading}\n            />\n            <Button\n              disabled={activity.isCancelled}\n              as={Link}\n              to={`/manage/${activity.id}`}\n              color=\"orange\"\n              floated=\"right\"\n            >\n              Manage Event\n            </Button>\n          </>\n        ) : activity.isGoing ? (\n          <Button loading={loading} onClick={updateAttendance}>\n            Cancel attendance\n          </Button>\n        ) : (\n          <Button\n            disabled={activity.isCancelled}\n            loading={loading}\n            onClick={updateAttendance}\n            color=\"teal\"\n          >\n            Join Activity\n          </Button>\n        )}\n      </Segment>\n    </Segment.Group>\n  );\n});\n","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Segment, Grid, Icon } from \"semantic-ui-react\";\nimport { Activity } from \"../../../app/models/activity\";\nimport { format } from \"date-fns\";\n\ninterface Props {\n  activity: Activity;\n}\n\nexport default observer(function ActivityDetailedInfo({ activity }: Props) {\n  return (\n    <Segment.Group>\n      <Segment attached=\"top\">\n        <Grid>\n          <Grid.Column width={1}>\n            <Icon size=\"large\" color=\"teal\" name=\"info\" />\n          </Grid.Column>\n          <Grid.Column width={15}>\n            <p>{activity.description}</p>\n          </Grid.Column>\n        </Grid>\n      </Segment>\n      <Segment attached>\n        <Grid verticalAlign=\"middle\">\n          <Grid.Column width={1}>\n            <Icon name=\"calendar\" size=\"large\" color=\"teal\" />\n          </Grid.Column>\n          <Grid.Column width={15}>\n            <span>{format(activity.date!, \"dd MMM yyyy h:mm aa\")}</span>\n          </Grid.Column>\n        </Grid>\n      </Segment>\n      <Segment attached>\n        <Grid verticalAlign=\"middle\">\n          <Grid.Column width={1}>\n            <Icon name=\"marker\" size=\"large\" color=\"teal\" />\n          </Grid.Column>\n          <Grid.Column width={11}>\n            <span>\n              {activity.venue}, {activity.city}\n            </span>\n          </Grid.Column>\n        </Grid>\n      </Segment>\n    </Segment.Group>\n  );\n});\n","import React from \"react\";\nimport { Segment, List, Label, Item, Image } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport { observer } from \"mobx-react-lite\";\nimport { Activity } from \"../../../app/models/activity\";\n\ninterface Props {\n  activity: Activity;\n}\n\nexport default observer(function ActivityDetailedSidebar({\n  activity: { attendees, host },\n}: Props) {\n  if (!attendees) return null;\n  return (\n    <>\n      <Segment\n        textAlign=\"center\"\n        style={{ border: \"none\" }}\n        attached=\"top\"\n        secondary\n        inverted\n        color=\"teal\"\n      >\n        {attendees.length} {attendees.length === 1 ? \"Person\" : \"People\"} going\n      </Segment>\n      <Segment attached>\n        <List relaxed divided>\n          {attendees.map((attendee) => (\n            <Item style={{ position: \"relative\" }} key={attendee.username}>\n              {attendee.username === host?.username && (\n                <Label\n                  style={{ position: \"absolute\" }}\n                  color=\"orange\"\n                  ribbon=\"right\"\n                >\n                  Host\n                </Label>\n              )}\n              <Image size=\"tiny\" src={attendee.image || \"/assets/user.png\"} />\n              <Item.Content verticalAlign=\"middle\">\n                <Item.Header as=\"h3\">\n                  <Link to={`/profiles/${attendee.username}`}>\n                    {attendee.displayName}\n                  </Link>\n                </Item.Header>\n                {attendee.following && (\n                  <Item.Extra style={{ color: \"orange\" }}>Following</Item.Extra>\n                )}\n              </Item.Content>\n            </Item>\n          ))}\n        </List>\n      </Segment>\n    </>\n  );\n});\n","import { observer } from \"mobx-react-lite\";\nimport { useEffect } from \"react\";\nimport { useParams } from \"react-router\";\nimport { Grid } from \"semantic-ui-react\";\nimport LoadingComponent from \"../../../app/layout/LoadingComponent\";\nimport { useStore } from \"../../../app/stores/store\";\nimport ActivityDetailedChat from \"./ActivityDetailedChat\";\nimport ActivityDetailedHeader from \"./ActivityDetailedHeader\";\nimport ActivityDetailedInfo from \"./ActivityDetailedInfo\";\nimport ActivityDetailedSidebar from \"./ActivityDetailedSidebar\";\n\nconst ActivityDetails = () => {\n  const { activityStore } = useStore();\n  const {\n    selectedActivity: activity,\n    loadActivity,\n    loadingInitial,\n    clearSelectedActivity,\n  } = activityStore;\n  const { id } = useParams<{ id: string }>();\n\n  useEffect(() => {\n    if (id) loadActivity(id);\n    return () => clearSelectedActivity();\n  }, [id, loadActivity, clearSelectedActivity]);\n\n  if (loadingInitial || !activity) return <LoadingComponent />;\n\n  return (\n    <Grid>\n      <Grid.Column width={10}>\n        <ActivityDetailedHeader activity={activity} />\n        <ActivityDetailedInfo activity={activity} />\n        <ActivityDetailedChat activityId={activity.id} />\n      </Grid.Column>\n      <Grid.Column width={6}>\n        <ActivityDetailedSidebar activity={activity} />\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nexport default observer(ActivityDetails);\n","import React, { useState } from \"react\";\nimport { Button, Header, Segment } from \"semantic-ui-react\";\nimport axios from \"axios\";\nimport { ValidationErrors } from \"./ValidationErrors\";\n\nexport default function TestErrors() {\n  const baseUrl = process.env.REACT_APP_API_URL;\n  const [errors, setErrors] = useState(null);\n\n  function handleNotFound() {\n    axios\n      .get(baseUrl + \"buggy/not-found\")\n      .catch((err) => console.log(err.response));\n  }\n\n  function handleBadRequest() {\n    axios\n      .get(baseUrl + \"buggy/bad-request\")\n      .catch((err) => console.log(err.response));\n  }\n\n  function handleServerError() {\n    axios\n      .get(baseUrl + \"buggy/server-error\")\n      .catch((err) => console.log(err.response));\n  }\n\n  function handleUnauthorised() {\n    axios\n      .get(baseUrl + \"buggy/unauthorised\")\n      .catch((err) => console.log(err.response));\n  }\n\n  function handleBadGuid() {\n    axios.get(baseUrl + \"activities/notaguid\").catch((err) => console.log(err));\n  }\n\n  function handleValidationError() {\n    axios.post(baseUrl + \"activities\", {}).catch((err) => setErrors(err));\n  }\n\n  return (\n    <>\n      <Header as=\"h1\" content=\"Test Error component\" />\n      <Segment>\n        <Button.Group widths=\"7\">\n          <Button onClick={handleNotFound} content=\"Not Found\" basic primary />\n          <Button\n            onClick={handleBadRequest}\n            content=\"Bad Request\"\n            basic\n            primary\n          />\n          <Button\n            onClick={handleValidationError}\n            content=\"Validation Error\"\n            basic\n            primary\n          />\n          <Button\n            onClick={handleServerError}\n            content=\"Server Error\"\n            basic\n            primary\n          />\n          <Button\n            onClick={handleUnauthorised}\n            content=\"Unauthorised\"\n            basic\n            primary\n          />\n          <Button onClick={handleBadGuid} content=\"Bad Guid\" basic primary />\n        </Button.Group>\n      </Segment>\n      {errors && <ValidationErrors errors={errors} />}\n    </>\n  );\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Header, Icon, Segment } from \"semantic-ui-react\";\n\nexport const NotFound = () => {\n  return (\n    <Segment placeholder>\n      <Header icon>\n        <Icon name=\"search\" />\n        Oops - we've looked everywhere and could not find this.\n      </Header>\n      <Segment.Inline>\n        <Button as={Link} to=\"/activities\" primary>\n          Return to activities page\n        </Button>\n      </Segment.Inline>\n    </Segment>\n  );\n};\n","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Container, Header, Segment } from \"semantic-ui-react\";\nimport { useStore } from \"../../app/stores/store\";\n\nconst ServerError = () => {\n  const { commonStore } = useStore();\n  return (\n    <Container>\n      <Header as=\"h1\" content=\"Server Error\" />\n      <Header sub as=\"h5\" color=\"red\" content={commonStore.error?.message} />\n      {commonStore.error?.details && (\n        <Segment>\n          <Header as=\"h4\" content=\"Stack trace\" color=\"teal\" />\n          <code style={{ marginTop: \"10px\" }}>{commonStore.error.details}</code>\n        </Segment>\n      )}\n    </Container>\n  );\n};\nexport default observer(ServerError);\n","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Modal } from \"semantic-ui-react\";\nimport { useStore } from \"../../stores/store\";\nconst ModalContainer = () => {\n  const { modalStore } = useStore();\n  return (\n    <Modal\n      open={modalStore.modal.open}\n      onClose={modalStore.closeModal}\n      size=\"mini\"\n    >\n      <Modal.Content>{modalStore.modal.body}</Modal.Content>\n    </Modal>\n  );\n};\n\nexport default observer(ModalContainer);\n","import { Form, Formik } from \"formik\";\nimport { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { useStore } from \"../../app/stores/store\";\nimport * as Yup from \"yup\";\nimport { Button } from \"semantic-ui-react\";\nimport MyTextInput from \"../../app/common/form/MyTextInput\";\nimport MyTextArea from \"../../app/common/form/MyTextArea\";\n\ninterface Props {\n  setEditMode: (editMode: boolean) => void;\n}\n\nconst ProfileEditForm = ({ setEditMode }: Props) => {\n  const {\n    profileStore: { profile, updateProfile },\n  } = useStore();\n  return (\n    <Formik\n      initialValues={{ displayName: profile?.displayName, bio: profile?.bio }}\n      onSubmit={(values) => {\n        updateProfile(values).then(() => {\n          setEditMode(false);\n        });\n      }}\n      validationSchema={Yup.object({\n        displayName: Yup.string().required(),\n      })}\n    >\n      {({ isSubmitting, isValid, dirty }) => (\n        <Form className=\"ui form\">\n          <MyTextInput placeholder=\"Display Name\" name=\"displayName\" />\n          <MyTextArea rows={3} placeholder=\"Add your bio\" name=\"bio\" />\n          <Button\n            positive\n            type=\"submit\"\n            loading={isSubmitting}\n            content=\"Update profile\"\n            floated=\"right\"\n            disabled={!isValid || !dirty}\n          />\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default observer(ProfileEditForm);\n","import { observer } from \"mobx-react-lite\";\nimport React, { useState } from \"react\";\nimport { Button, Grid, Header, Tab } from \"semantic-ui-react\";\nimport { useStore } from \"../../app/stores/store\";\nimport ProfileEditForm from \"./ProfileEditForm\";\n\nconst ProfileAbout = () => {\n  const { profileStore } = useStore();\n  const { isCurrentUser, profile } = profileStore;\n  const [editMode, setEditMode] = useState(false);\n  return (\n    <Tab.Pane>\n      <Grid>\n        <Grid.Column width=\"16\">\n          <Header\n            floated=\"left\"\n            icon=\"user\"\n            content={`About ${profile?.displayName}`}\n          />\n          {isCurrentUser && (\n            <Button\n              floated=\"right\"\n              basic\n              content={editMode ? \"Cancel\" : \"Edit Profile\"}\n              onClick={() => setEditMode(!editMode)}\n            />\n          )}\n        </Grid.Column>\n        <Grid.Column width=\"16\">\n          {editMode ? (\n            <ProfileEditForm setEditMode={setEditMode} />\n          ) : (\n            <span style={{ whiteSpace: \"pre-wrap\" }}>{profile?.bio}</span>\n          )}\n        </Grid.Column>\n      </Grid>\n    </Tab.Pane>\n  );\n};\nexport default observer(ProfileAbout);\n","import { format } from \"date-fns\";\nimport { observer } from \"mobx-react-lite\";\nimport React, { SyntheticEvent, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Card, Grid, Header, Image, Tab, TabProps } from \"semantic-ui-react\";\nimport { UserActivity } from \"../../app/models/profile\";\nimport { useStore } from \"../../app/stores/store\";\n\nconst panes = [\n  { menuItem: \"Future Events\", pane: { key: \"future\" } },\n  { menuItem: \"Past Events\", pane: { key: \"past\" } },\n  { menuItem: \"Hosting\", pane: { key: \"hosting\" } },\n];\n\nconst ProfileActivities = () => {\n  const { profileStore } = useStore();\n  const { loadUserActivities, profile, loadingActivities, userActivities } =\n    profileStore;\n\n  useEffect(() => {\n    loadUserActivities(profile!.username);\n  }, [loadUserActivities, profile]);\n \n  const handleTabChange = (e: SyntheticEvent, data: TabProps) => {\n    loadUserActivities(\n      profile!.username,\n      panes[data.activeIndex as number].pane.key\n    );\n  };\n  return (\n    <Tab.Pane loading={loadingActivities}>\n      <Grid>\n        <Grid.Column width={16}>\n          <Header floated=\"left\" icon=\"calendar\" content={\"Activities\"} />\n        </Grid.Column>\n        <Grid.Column width={16}>\n          <Tab\n            panes={panes}\n            menu={{ secondary: true, pointing: true }}\n            onTabChange={(e, data) => handleTabChange(e, data)}\n          />\n          <br />\n          <Card.Group itemsPerRow={4}>\n            {userActivities.map((activity: UserActivity) => (\n              <Card\n                as={Link}\n                to={`/activities/${activity.id}`}\n                key={activity.id}\n              >\n                <Image\n                  src={`/assets/categoryImages/${activity.category}.jpg`}\n                  style={{ minHeight: 100, objectFit: \"cover\" }}\n                />\n                <Card.Content>\n                  <Card.Header textAlign=\"center\">{activity.title}</Card.Header>\n                  <Card.Meta textAlign=\"center\">\n                    <div>{format(new Date(activity.date), \"do LLL\")}</div>\n                    <div>{format(new Date(activity.date), \"h:mm a\")}</div>\n                  </Card.Meta>\n                </Card.Content>\n              </Card>\n            ))}\n          </Card.Group>\n        </Grid.Column>\n      </Grid>\n    </Tab.Pane>\n  );\n};\nexport default observer(ProfileActivities);\n","import { observer } from \"mobx-react-lite\";\nimport { Card, Grid, Header, Tab } from \"semantic-ui-react\";\nimport { useStore } from \"../../app/stores/store\";\nimport ProfileCard from \"./ProfileCard\";\n\nconst ProfileFollowings = () => {\n  const { profileStore } = useStore();\n  const { profile, followings, loadingFollowings, activeTab } = profileStore;\n\n  return (\n    <Tab.Pane loading={loadingFollowings}>\n      <Grid>\n        <Grid.Column width={16}>\n          <Header\n            floated=\"left\"\n            icon=\"user\"\n            content={\n              activeTab === 3\n                ? `People following ${profile?.displayName}`\n                : `People ${profile?.displayName} is following`\n            }\n          />\n        </Grid.Column>\n        <Grid.Column width={16}>\n          <Card.Group itemsPerRow={4}>\n            {followings.map((profile) => (\n              <ProfileCard key={profile.username} profile={profile} />\n            ))}\n          </Card.Group>\n        </Grid.Column>\n      </Grid>\n    </Tab.Pane>\n  );\n};\nexport default observer(ProfileFollowings);\n","import React from \"react\";\nimport { Cropper } from \"react-cropper\";\nimport \"cropperjs/dist/cropper.css\";\n\ninterface Props {\n  imagePreview: string;\n  setCropper: (cropper: Cropper) => void;\n}\n\nconst PhotoWidgetCropper = ({ imagePreview, setCropper }: Props) => {\n  return (\n    <Cropper\n      src={imagePreview}\n      style={{ height: 200, width: \"100%\" }}\n      initialAspectRatio={1}\n      aspectRatio={1}\n      preview=\".img-preview\"\n      guides={false}\n      viewMode={1}\n      autoCropArea={1}\n      background={false}\n      onInitialized={(cropper) => setCropper(cropper)}\n    />\n  );\n};\nexport default PhotoWidgetCropper;\n","import React, { useCallback } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport { Header, Icon } from \"semantic-ui-react\";\n\ninterface Props {\n  setFiles: (files: any) => void;\n}\n\nconst PhotoWidgetDropzone = ({ setFiles }: Props) => {\n  const dzStyles = {\n    border: \"dashed 3px #eee\",\n    borderColor: \"#eee\",\n    borderRadius: \"5px\",\n    paddingTop: \"30px\",\n    textAlign: \"center\" as \"center\",\n    height: 200,\n  };\n\n  const dzActive = {\n    borderColor: \"green\",\n  };\n\n  const onDrop = useCallback(\n    (acceptedFiles) => {\n      setFiles(\n        acceptedFiles.map((file: any) =>\n          Object.assign(file, {\n            preview: URL.createObjectURL(file),\n          })\n        )\n      );\n    },\n    [setFiles]\n  );\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\n\n  return (\n    <div\n      {...getRootProps()}\n      style={isDragActive ? { ...dzStyles, ...dzActive } : dzStyles}\n    >\n      <input {...getInputProps()} />\n      <Icon name=\"upload\" size=\"huge\" />\n      <Header content=\"Drop image here\" />\n    </div>\n  );\n};\n\nexport default PhotoWidgetDropzone;\n","import React, { useEffect, useState } from \"react\";\nimport { Button, Grid, Header } from \"semantic-ui-react\";\nimport PhotoWidgetCropper from \"./PhotoWidgetCropper\";\nimport PhotoWidgetDropzone from \"./PhotoWidgetDropzone\";\n\ninterface Props {\n  loading: boolean;\n  uploadPhoto: (file: Blob) => void;\n}\n\nconst PhotoUploadWidget = ({ loading, uploadPhoto }: Props) => {\n  const [files, setFiles] = useState<any>([]);\n  const [cropper, setCropper] = useState<Cropper>();\n\n  function onCrop() {\n    if (cropper) {\n      cropper?.getCroppedCanvas().toBlob((blob) => uploadPhoto(blob!));\n    }\n  }\n\n  useEffect(() => {\n    return () => {\n      files.forEach((file: any) => URL.revokeObjectURL(file.preview));\n    };\n  }, [files]);\n\n  return (\n    <Grid>\n      <Grid.Column width={4}>\n        <Header sub color=\"teal\" content=\"Step 1 - Add Photo\" />\n        <PhotoWidgetDropzone setFiles={setFiles} />\n      </Grid.Column>\n      <Grid.Column width={1} />\n      <Grid.Column width={4}>\n        <Header sub color=\"teal\" content=\"Step 2 - Resize image\" />\n        {files && files.length > 0 && (\n          <PhotoWidgetCropper\n            setCropper={setCropper}\n            imagePreview={files[0].preview}\n          />\n        )}\n      </Grid.Column>\n      <Grid.Column width={1} />\n      <Grid.Column width={4}>\n        <Header sub color=\"teal\" content=\"Step 3 - Preview & Upload\" />\n        {files && files.length > 0 && (\n          <>\n            <div\n              className=\"img-preview\"\n              style={{ minHeight: 200, overflow: \"hidden\" }}\n            />\n            <Button.Group widths={2}>\n              <Button\n                disabled={loading}\n                loading={loading}\n                onClick={onCrop}\n                positive\n                icon=\"check\"\n              />\n              <Button\n                disabled={loading}\n                onClick={() => setFiles([])}\n                icon=\"close\"\n              />\n            </Button.Group>\n          </>\n        )}\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nexport default PhotoUploadWidget;\n","import { observer } from \"mobx-react-lite\";\nimport React, { SyntheticEvent, useState } from \"react\";\nimport { Button, Card, Grid, Header, Image, Tab } from \"semantic-ui-react\";\nimport PhotoUploadWidget from \"../../app/common/imageUpload/PhotoUploadWidget\";\nimport { Photo, Profile } from \"../../app/models/profile\";\nimport { useStore } from \"../../app/stores/store\";\n\ninterface Props {\n  profile: Profile;\n}\n\nconst ProfilePhotos = ({ profile }: Props) => {\n  const {\n    profileStore: {\n      isCurrentUser,\n      uploadPhoto,\n      uploading,\n      loading,\n      setMainPhoto,\n      deletePhoto,\n    },\n  } = useStore();\n  const [addPhotoMode, setAddPhotoMode] = useState(false);\n  const [target, setTarget] = useState(\"\");\n\n  function handlePhotoUpload(file: Blob) {\n    uploadPhoto(file).then(() => setAddPhotoMode(false));\n  }\n\n  function handleSetMainPhoto(\n    photo: Photo,\n    e: SyntheticEvent<HTMLButtonElement>\n  ) {\n    setTarget(e.currentTarget.name);\n    setMainPhoto(photo);\n  }\n\n  function handleDeletePhoto(\n    photo: Photo,\n    e: SyntheticEvent<HTMLButtonElement>\n  ) {\n    setTarget(e.currentTarget.name);\n    deletePhoto(photo);\n  }\n\n  return (\n    <Tab.Pane>\n      <Grid>\n        <Grid.Column width={16}>\n          <Header floated=\"left\" icon=\"image\" content=\"Photos\" />\n          {isCurrentUser && (\n            <Button\n              floated=\"right\"\n              basic\n              content={addPhotoMode ? \"Cancel\" : \"Add Photo\"}\n              onClick={() => setAddPhotoMode(!addPhotoMode)}\n            />\n          )}\n        </Grid.Column>\n        <Grid.Column width={16}>\n          {addPhotoMode ? (\n            <PhotoUploadWidget\n              uploadPhoto={handlePhotoUpload}\n              loading={uploading}\n            />\n          ) : (\n            <Card.Group itemsPerRow={5}>\n              {profile.photos?.map((photo) => (\n                <Card key={photo.id}>\n                  <Image src={photo.url} />\n                  {isCurrentUser && (\n                    <Button.Group fluid widths={2}>\n                      <Button\n                        basic\n                        color=\"green\"\n                        content=\"Main\"\n                        name={\"main\" + photo.id}\n                        disabled={photo.isMain || loading}\n                        loading={target === \"main\" + photo.id && loading}\n                        onClick={(e) => handleSetMainPhoto(photo, e)}\n                      />\n                      <Button\n                        basic\n                        color=\"red\"\n                        icon=\"trash\"\n                        loading={target === photo.id && loading}\n                        onClick={(e) => handleDeletePhoto(photo, e)}\n                        disabled={photo.isMain}\n                        name={photo.id}\n                      />\n                    </Button.Group>\n                  )}\n                </Card>\n              ))}\n            </Card.Group>\n          )}\n        </Grid.Column>\n      </Grid>\n    </Tab.Pane>\n  );\n};\n\nexport default observer(ProfilePhotos);\n","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Tab } from \"semantic-ui-react\";\nimport { Profile } from \"../../app/models/profile\";\nimport { useStore } from \"../../app/stores/store\";\nimport ProfileAbout from \"./ProfileAbout\";\nimport ProfileActivities from \"./ProfileActivities\";\nimport ProfileFollowings from \"./ProfileFollowings\";\nimport ProfilePhotos from \"./ProfilePhotos\";\n\ninterface Props {\n  profile: Profile;\n}\n\nconst ProfileContent = ({ profile }: Props) => {\n  const { profileStore } = useStore();\n  const panes = [\n    { menuItem: \"About\", render: () => <ProfileAbout /> },\n    { menuItem: \"Photos\", render: () => <ProfilePhotos profile={profile} /> },\n    { menuItem: \"Events\", render: () => <ProfileActivities /> },\n    {\n      menuItem: \"Followers\",\n      render: () => <ProfileFollowings />,\n    },\n    {\n      menuItem: \"Following\",\n      render: () => <ProfileFollowings />,\n    },\n  ];\n\n  return (\n    <Tab\n      menu={{ fluid: true, vertical: true }}\n      menuPosition=\"right\"\n      panes={panes}\n      onTabChange={(e, data) => profileStore.setActiveTab(data.activeIndex)}\n    />\n  );\n};\n\nexport default observer(ProfileContent);\n","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport {\n  Divider,\n  Grid,\n  Header,\n  Item,\n  Segment,\n  Statistic,\n} from \"semantic-ui-react\";\nimport { Profile } from \"../../app/models/profile\";\nimport FollowButton from \"./FollowButton\";\n\ninterface Props {\n  profile: Profile;\n}\n\nconst ProfileHeader = ({ profile }: Props) => {\n  return (\n    <Segment>\n      <Grid>\n        <Grid.Column width={12}>\n          <Item.Group>\n            <Item>\n              <Item.Image\n                avatar\n                size=\"small\"\n                src={profile.image || \"/assets/user.png\"}\n              />\n              <Item.Content verticalAlign=\"middle\">\n                <Header as=\"h1\" content={profile.displayName} />\n              </Item.Content>\n            </Item>\n          </Item.Group>\n        </Grid.Column>\n        <Grid.Column width={4}>\n          <Statistic.Group widths={2}>\n            <Statistic label=\"Followes\" value={profile.followersCount} />\n            <Statistic label=\"Following\" value={profile.followingCount} />\n          </Statistic.Group>\n          <Divider />\n          <FollowButton profile={profile} />\n        </Grid.Column>\n      </Grid>\n    </Segment>\n  );\n};\nexport default observer(ProfileHeader);\n","import { observer } from \"mobx-react-lite\";\nimport React, { useEffect } from \"react\";\nimport { useParams } from \"react-router\";\nimport { Grid } from \"semantic-ui-react\";\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\nimport { useStore } from \"../../app/stores/store\";\nimport ProfileContent from \"./ProfileContent\";\nimport ProfileHeader from \"./ProfileHeader\";\n\nconst ProfilePage = () => {\n  const { username } = useParams<{ username: string }>();\n  const { profileStore } = useStore();\n  const { loadingProfile, loadProfile, profile, setActiveTab } = profileStore;\n\n  useEffect(() => {\n    loadProfile(username);\n    return () => {\n      setActiveTab(0);\n    };\n  }, [loadProfile, username, setActiveTab]);\n\n  if (loadingProfile) return <LoadingComponent content=\"Loading profile...\" />;\n\n  return (\n    <Grid>\n      <Grid.Column width={16}>\n        {profile && (\n          <>\n            <ProfileHeader profile={profile} />\n            <ProfileContent profile={profile} />\n          </>\n        )}\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nexport default observer(ProfilePage);\n","import {\n  Redirect,\n  Route,\n  RouteComponentProps,\n  RouteProps,\n} from \"react-router-dom\";\nimport { useStore } from \"../stores/store\";\n\ninterface Props extends RouteProps {\n  component:\n    | React.ComponentType<RouteComponentProps<any>>\n    | React.ComponentType<any>;\n}\n\nexport default function PrivateRoute({ component: Component, ...rest }: Props) {\n  const {\n    userStore: { isLoggedIn },\n  } = useStore();\n\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        isLoggedIn ? <Component {...props} /> : <Redirect to=\"/\" />\n      }\n    />\n  );\n}\n","import { Container } from \"semantic-ui-react\";\nimport NavBar from \"./NavBar\";\nimport ActivityDashboard from \"../../features/activities/dashboard/ActivityDashboard\";\nimport { observer } from \"mobx-react-lite\";\nimport { Route, Switch, useLocation } from \"react-router\";\nimport HomePage from \"../../features/home/HomePage\";\nimport { ActivityForm } from \"../../features/activities/form/ActivityForm\";\nimport ActivityDetails from \"../../features/activities/details/ActivityDetails\";\nimport TestErrors from \"../../features/errors/TestError\";\nimport { ToastContainer } from \"react-toastify\";\nimport { NotFound } from \"../../features/errors/NotFound\";\nimport ServerError from \"../../features/errors/ServerError\";\nimport { useStore } from \"../stores/store\";\nimport { useEffect } from \"react\";\nimport LoadingComponent from \"./LoadingComponent\";\nimport ModalContainer from \"../common/modals/ModalContainer\";\nimport ProfilePage from \"../../features/profiles/ProfilePage\";\nimport PrivateRoute from \"./PrivateRoute\";\n\nfunction App() {\n  const location = useLocation();\n  const { commonStore, userStore } = useStore();\n\n  useEffect(() => {\n    if (commonStore.token) {\n      userStore.getUser().finally(() => commonStore.setAppLoaded());\n    } else {\n      userStore.getFacebookLoginStatus().then(() => commonStore.setAppLoaded());\n    }\n  }, [commonStore, userStore]);\n\n  if (!commonStore.appLoaded)\n    return <LoadingComponent content=\"Loading app...\" />;\n\n  return (\n    <>\n      <ToastContainer position=\"bottom-right\" hideProgressBar />\n      <ModalContainer />\n      <Route exact path=\"/\" component={HomePage} />\n      <Route\n        path={\"/(.+)\"}\n        render={() => (\n          <>\n            <NavBar />\n            <Container style={{ marginTop: \"7em\" }}>\n              <Switch>\n                <PrivateRoute\n                  exact\n                  path=\"/activities\"\n                  component={ActivityDashboard}\n                />\n                <PrivateRoute\n                  path=\"/activities/:id\"\n                  component={ActivityDetails}\n                />\n                <PrivateRoute\n                  key={location.key}\n                  path={[\"/createActivity\", \"/manage/:id\"]}\n                  component={ActivityForm}\n                />\n                <PrivateRoute\n                  path=\"/profiles/:username\"\n                  component={ProfilePage}\n                />\n                <Route path=\"/errors\" component={TestErrors} />\n                <Route path=\"/server-error\" component={ServerError} />\n                <Route component={NotFound} />\n              </Switch>\n            </Container>\n          </>\n        )}\n      />\n    </>\n  );\n}\n\nexport default observer(App);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport \"react-calendar/dist/Calendar.css\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\nimport 'react-datepicker/dist/react-datepicker.css';\nimport \"./app/layout/styles.css\";\nimport App from \"./app/layout/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { store, StoreContext } from \"./app/stores/store\";\nimport { Router } from \"react-router-dom\";\nimport {createBrowserHistory} from 'history';\nimport ScrollToTop from \"./app/layout/ScrollToTop\";\n\nexport const history = createBrowserHistory();\n\nReactDOM.render(\n  <StoreContext.Provider value={store}>\n    <Router history={history}>\n      <ScrollToTop />\n      <App />\n    </Router>\n  </StoreContext.Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}